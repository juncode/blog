-- phpMyAdmin SQL Dump
-- version 3.3.10.5
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2015 年 04 月 10 日 16:59
-- 服务器版本: 5.5.41
-- PHP 版本: 5.4.39-1+deb.sury.org~precise+2

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `uu164057`
--

-- --------------------------------------------------------

--
-- 表的结构 `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
CREATE TABLE IF NOT EXISTS `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=127 ;

--
-- 转存表中的数据 `wp_posts`
--

INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(9, 1, '2014-12-18 18:40:23', '2014-12-18 10:40:23', '关于Linux的学习知识，在这里给大家分享。', '', '', 'publish', 'open', 'open', '', '9', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://localhost:8088/?p=9', 2, 'nav_menu_item', '', 0),
(10, 1, '2014-12-18 18:40:23', '2014-12-18 10:40:23', 'php的知识，在这版块给大家分享和总结。', '', '', 'publish', 'open', 'open', '', '10', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://localhost:8088/?p=10', 5, 'nav_menu_item', '', 0),
(11, 1, '2014-12-18 18:40:23', '2014-12-18 10:40:23', '数据库大分类', '', '', 'publish', 'open', 'open', '', '11', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://localhost:8088/?p=11', 6, 'nav_menu_item', '', 0),
(12, 1, '2014-12-18 18:43:01', '2014-12-18 10:43:01', ' ', '', '', 'publish', 'open', 'open', '', '12', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 5, 'http://localhost:8088/?p=12', 3, 'nav_menu_item', '', 0),
(13, 1, '2014-12-18 18:43:02', '2014-12-18 10:43:02', '非关系型数据库', '', '', 'publish', 'open', 'open', '', '13', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 6, 'http://localhost:8088/?p=13', 7, 'nav_menu_item', '', 0),
(15, 1, '2014-12-18 18:43:02', '2014-12-18 10:43:02', 'postgres知识分享篇', '', '', 'publish', 'open', 'open', '', '15', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 6, 'http://localhost:8088/?p=15', 8, 'nav_menu_item', '', 0),
(16, 1, '2014-12-18 18:44:02', '2014-12-18 10:44:02', '关于Linux的学习知识，在这里给大家分享。', '', '', 'publish', 'open', 'open', '', '16', '', '', '2014-12-30 13:06:38', '2014-12-30 05:06:38', '', 0, 'http://localhost:8088/?p=16', 2, 'nav_menu_item', '', 0),
(17, 1, '2014-12-18 18:44:02', '2014-12-18 10:44:02', 'php的知识，在这版块给大家分享和总结。', '', '', 'publish', 'open', 'open', '', '17', '', '', '2014-12-30 13:06:38', '2014-12-30 05:06:38', '', 0, 'http://localhost:8088/?p=17', 3, 'nav_menu_item', '', 0),
(18, 1, '2014-12-18 18:44:02', '2014-12-18 10:44:02', '数据库大分类', '', '', 'publish', 'open', 'open', '', '18', '', '', '2014-12-30 13:06:38', '2014-12-30 05:06:38', '', 0, 'http://localhost:8088/?p=18', 4, 'nav_menu_item', '', 0),
(23, 1, '2014-12-26 15:35:53', '2014-12-26 07:35:53', '最近接触git这块，在尝试linux服务器上使用ssh方式git clone 源码时，发现其中是有很多需要学习与掌握，涉及ssh密钥配置，git基本操作，等等。\r\n\r\n一、SSH密钥配置：\r\n\r\n备份 ～/.ssh/ 目录，配置git 用户和邮件\r\n\r\ngit  config --global user.name "xiaoan"\r\n\r\ngit  config --global user.email "j@wonhsi.com"\r\n\r\n&nbsp;\r\n\r\n二、生成密钥对\r\n\r\nssh-keygen -t rsa -C "j@wonhsi.com"\r\n\r\n将.pub文件的内容填写在github的ssh密钥里\r\n<p style="text-align: left;">三、测试 ssh</p>\r\n<p style="text-align: left;">ssh -T git@github.com</p>\r\n<p style="text-align: left;">若成功，返回Hello ~字样。</p>\r\n<p style="text-align: left;">四、git clone</p>\r\n<p style="text-align: left;">git clone git@github.com:wonhsi/MyWord.git</p>\r\n&nbsp;\r\n\r\n现在开始练习基本的git操作指令：( 下面是一篇比较好的博文，涉及git一些常用用法。)\r\n\r\n<a title="Git 远程操作详解（再不会 Git 就真的没团队收你了，嗯哼）" href="http://segmentfault.com/blog/news/1190000002442065" target="_blank">http://segmentfault.com/blog/news/1190000002442065</a>', 'GIT 的基本配置与使用', '', 'publish', 'open', 'open', '', 'git-%e7%9a%84%e5%9f%ba%e6%9c%ac%e9%85%8d%e7%bd%ae%e4%b8%8e%e4%bd%bf%e7%94%a8', '', '', '2015-04-02 17:42:25', '2015-04-02 09:42:25', '', 0, 'http://www.wonhsi.com/xiaoan/?p=23', 0, 'post', '', 0),
(24, 1, '2014-12-26 11:47:19', '2014-12-26 03:47:19', '最近接触git这块，在尝试linux服务器上使用ssh方式git clone 源码时，发现其中是有很多需要学习与掌握，涉及ssh密钥配置，git基本操作，等等。\r\n\r\n一、SSH密钥配置：\r\n\r\n切换到 ～/.ssh/ 目录 下 cd ~/.ssh/\r\n\r\n将pem密钥拷贝至此目录下，编辑或添加配置文件config ， vim config\r\n\r\n编辑器中添加如下代码：\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'GIT 的基本配置与使用', '', 'inherit', 'open', 'open', '', '23-revision-v1', '', '', '2014-12-26 11:47:19', '2014-12-26 03:47:19', '', 23, 'http://www.wonhsi.com/xiaoan/23-revision-v1/', 0, 'revision', '', 0),
(25, 1, '2014-12-26 15:35:53', '2014-12-26 07:35:53', '最近接触git这块，在尝试linux服务器上使用ssh方式git clone 源码时，发现其中是有很多需要学习与掌握，涉及ssh密钥配置，git基本操作，等等。\r\n\r\n一、SSH密钥配置：\r\n\r\n备份 ～/.ssh/ 目录，配置git 用户和邮件\r\n\r\ngit  config --global user.name "xiaoan"\r\n\r\ngit  config --global user.email "j@wonhsi.com"\r\n\r\n&nbsp;\r\n\r\n二、生成密钥对\r\n\r\nssh-keygen -t rsa -C "j@wonhsi.com"\r\n\r\n将.pub文件的内容填写在github的ssh密钥里\r\n<p style="text-align: left;"></p>\r\n<p style="text-align: left;">三、测试 ssh</p>\r\n<p style="text-align: left;">ssh -T git@github.com</p>\r\n<p style="text-align: left;">若成功，返回Hello ~字样。</p>\r\n<p style="text-align: left;"></p>\r\n<p style="text-align: left;">四、git clone</p>\r\n<p style="text-align: left;">git clone git@github.com:wonhsi/MyWord.git</p>\r\n&nbsp;\r\n\r\n现在开始练习基本的git操作指令：\r\n\r\n&nbsp;', 'GIT 的基本配置与使用', '', 'inherit', 'open', 'open', '', '23-revision-v1', '', '', '2014-12-26 15:35:53', '2014-12-26 07:35:53', '', 23, 'http://www.wonhsi.com/xiaoan/23-revision-v1/', 0, 'revision', '', 0),
(26, 1, '2014-12-26 15:39:08', '2014-12-26 07:39:08', '&nbsp;\r\n\r\n程序猿的世界永无止境！\r\n\r\n程序猿的世界独一无二！\r\n\r\n程序猿的世界你不懂！\r\n\r\n我将在这\r\n\r\n开垦荒地\r\n\r\n创建猿类聚集地\r\n\r\n知识，程序猿的源头\r\n\r\n走进那，浩瀚的宇宙\r\n\r\n与你携手，共创猿类世界', '欢迎来到我的blog', '', 'publish', 'open', 'open', '', 'hello-%e6%88%91%e7%9a%84%e5%9f%ba%e5%9c%b0%e6%ad%a3%e5%bc%8f%e5%bc%80%e9%80%9a', '', '', '2015-04-02 16:40:51', '2015-04-02 08:40:51', '', 0, 'http://www.wonhsi.com/xiaoan/?page_id=26', 0, 'page', '', 0),
(27, 1, '2014-12-26 15:39:08', '2014-12-26 07:39:08', ' ', '', '', 'publish', 'open', 'open', '', '27', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/27/', 1, 'nav_menu_item', '', 0),
(28, 1, '2014-12-26 15:39:08', '2014-12-26 07:39:08', ' ', '', '', 'publish', 'open', 'open', '', '28', '', '', '2014-12-30 13:06:38', '2014-12-30 05:06:38', '', 0, 'http://www.wonhsi.com/xiaoan/28/', 1, 'nav_menu_item', '', 0),
(29, 1, '2014-12-26 15:39:08', '2014-12-26 07:39:08', '我的基地正式开通，欢迎大家收藏和访问。\r\n\r\n后续会在这上面写一些技术文档，同大家分享和探讨知识。', 'Hello 我的基地正式开通', '', 'inherit', 'open', 'open', '', '26-revision-v1', '', '', '2014-12-26 15:39:08', '2014-12-26 07:39:08', '', 26, 'http://www.wonhsi.com/xiaoan/26-revision-v1/', 0, 'revision', '', 0),
(30, 1, '2014-12-26 15:41:30', '2014-12-26 07:41:30', '我的基地正式开通，欢迎大家收藏和访问。\r\n\r\n后续会在这上面写一些技术文档，同大家分享和探讨知识。', '博主', '', 'inherit', 'open', 'open', '', '26-revision-v1', '', '', '2014-12-26 15:41:30', '2014-12-26 07:41:30', '', 26, 'http://www.wonhsi.com/xiaoan/26-revision-v1/', 0, 'revision', '', 0),
(31, 1, '2014-12-30 15:22:03', '2014-12-30 07:22:03', '指定端口：\r\n\r\ndocker pull ubuntu 这个命令中，可以指定端品进行，默认是用/var/run/docker.sock 套接字～如\r\n\r\n如 docker -H :5555 pull ubuntu , docker -H tcp:127.0.0.1:4243 pull ubuntu\r\n\r\n&nbsp;\r\n\r\n有趣的实验：\r\n<pre><code>    JOB=$(sudo docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")\r\n    查看输出 docker logs $JOB 每隔一秒会多输出一个hello world\r\n    关闭进程 docker kill $JOB\r\n\r\n    监听运行的容器\r\n    docker ps\r\n\r\n    docker run -d -p 4200:4200 crate/crate 有时会报 Error response from daemon: Cannot start container\r\n 这个时候 重启下服务即可。\r\n\r\n    create images 可以通过 Dockerfile 方式进行\r\n    如生成一个带httpd 的镜像\r\n    FROM centos \r\n    MAINTAINER xiaoan &lt;j@wonhsi.com&gt;\r\n    RUN yum -y update #保持resporitory 最新。\r\n    RUN yum -y install httpd #安装httpd服务\r\n    ADD WEBPAGE /var/www/html   #拷贝网站文件\r\n\r\n    执行 docker build . \r\n\r\n\r\n    当打开docker ps -a 时，一堆没用的container在后台，这种情况下是无法执行 docker rmi -f 删除所运行着的\r\nimages ， 一次性 docker rm 所有的container , docker rm $(docker ps -aq);然后执行docker rmi contain_id.\r\n    \r\n</code></pre>', 'docker 的基础概念学习笔记', '', 'publish', 'open', 'open', '', 'docker-%e7%9a%84%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0', '', '', '2015-04-02 17:42:02', '2015-04-02 09:42:02', '', 0, 'http://www.wonhsi.com/xiaoan/?p=31', 0, 'post', '', 0),
(32, 1, '2014-12-29 11:24:24', '2014-12-29 03:24:24', '指定端品：\r\n\r\ndocker pull ubuntu 这个命令中，可以指定端品进行，默认是用/var/run/docker.sock 套接字～如\r\n\r\n如 docker -H :5555 pull ubuntu , docker -H tcp:127.0.0.1:4243 pull ubuntu\r\n\r\n&nbsp;\r\n\r\n有趣的实验：\r\n<pre><code>    JOB=$(sudo docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")\r\n    查看输出 docker logs $JOB 每隔一秒会多输出一个hello world\r\n    关闭进程 docker kill $JOB\r\n\r\n    监听运行的容器\r\n    docker ps\r\n\r\n    docker run -d -p 4200:4200 crate/crate 有时会报 Error response from daemon: Cannot start container 这个时候 重启下服务即可。\r\n\r\n</code></pre>', 'docker 的基础概念学习笔记', '', 'inherit', 'open', 'open', '', '31-revision-v1', '', '', '2014-12-29 11:24:24', '2014-12-29 03:24:24', '', 31, 'http://www.wonhsi.com/xiaoan/31-revision-v1/', 0, 'revision', '', 0),
(33, 1, '2014-12-29 12:27:09', '2014-12-29 04:27:09', '指定端口：\r\n\r\ndocker pull ubuntu 这个命令中，可以指定端品进行，默认是用/var/run/docker.sock 套接字～如\r\n\r\n如 docker -H :5555 pull ubuntu , docker -H tcp:127.0.0.1:4243 pull ubuntu\r\n\r\n&nbsp;\r\n\r\n有趣的实验：\r\n<pre><code>    JOB=$(sudo docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")\r\n    查看输出 docker logs $JOB 每隔一秒会多输出一个hello world\r\n    关闭进程 docker kill $JOB\r\n\r\n    监听运行的容器\r\n    docker ps\r\n\r\n    docker run -d -p 4200:4200 crate/crate 有时会报 Error response from daemon: Cannot start container\r\n 这个时候 重启下服务即可。\r\n\r\n    create images 可以通过 Dockerfile 方式进行\r\n    如生成一个带httpd 的镜像\r\n    FROM centos \r\n    MAINTAINER xiaoan &lt;j@wonhsi.com&gt;\r\n    RUN yum -y update #保持resporitory 最新。\r\n    RUN yum -y install httpd #安装httpd服务\r\n    ADD WEBPAGE /var/www/html   #拷贝网站文件\r\n\r\n    执行 docker build . \r\n\r\n\r\n</code></pre>', 'docker 的基础概念学习笔记', '', 'inherit', 'open', 'open', '', '31-revision-v1', '', '', '2014-12-29 12:27:09', '2014-12-29 04:27:09', '', 31, 'http://www.wonhsi.com/xiaoan/31-revision-v1/', 0, 'revision', '', 0),
(34, 1, '2014-12-29 16:25:18', '2014-12-29 08:25:18', '指定端口：\r\n\r\ndocker pull ubuntu 这个命令中，可以指定端品进行，默认是用/var/run/docker.sock 套接字～如\r\n\r\n如 docker -H :5555 pull ubuntu , docker -H tcp:127.0.0.1:4243 pull ubuntu\r\n\r\n&nbsp;\r\n\r\n有趣的实验：\r\n<pre><code>    JOB=$(sudo docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")\r\n    查看输出 docker logs $JOB 每隔一秒会多输出一个hello world\r\n    关闭进程 docker kill $JOB\r\n\r\n    监听运行的容器\r\n    docker ps\r\n\r\n    docker run -d -p 4200:4200 crate/crate 有时会报 Error response from daemon: Cannot start container\r\n 这个时候 重启下服务即可。\r\n\r\n    create images 可以通过 Dockerfile 方式进行\r\n    如生成一个带httpd 的镜像\r\n    FROM centos \r\n    MAINTAINER xiaoan &lt;j@wonhsi.com&gt;\r\n    RUN yum -y update #保持resporitory 最新。\r\n    RUN yum -y install httpd #安装httpd服务\r\n    ADD WEBPAGE /var/www/html   #拷贝网站文件\r\n\r\n    执行 docker build . \r\n\r\n\r\n    当打开docker ps -a 时，一堆没用的container在后台，这种情况下是无法执行 docker rmi -f 删除所运行着的\r\nimages ， 一次性 docker rm 所有的container , docker rm $(docker ps -q);然后执行docker rmi contain_id.\r\n    \r\n</code></pre>', 'docker 的基础概念学习笔记', '', 'inherit', 'open', 'open', '', '31-revision-v1', '', '', '2014-12-29 16:25:18', '2014-12-29 08:25:18', '', 31, 'http://www.wonhsi.com/xiaoan/31-revision-v1/', 0, 'revision', '', 0),
(35, 1, '2014-12-30 13:00:40', '2014-12-30 05:00:40', '单个mysql服务器处理数据的瓶颈卡在百万级上，现在为了测试下两台mysql主从服务器的数据处理能力，并记录为这篇文档。\r\n\r\n主服务器为 192.168.12.210 后文中称为 master , 从服务器为 192.168.12.116 后文称之为slave\r\n<h2>配置说明：</h2>\r\n1、允许slave 访问master , 在master mysql中执行：\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO `backup`@`192.168.12.116` IDENTIFIED BY ''123456'';\r\n\r\n2、在master 的 /etc/my.conf 中的 [mysqld] 添加如下几行配置\r\n\r\n<code>server-id = 1\r\nbinlog-do-db=xiaoan\r\n#log-bin=mysql-bin\r\nbinlog-ignore-db=mysql</code>\r\n\r\n3、在slave 的/etc/my.conf 中的[mysqld] 添加如下几行配置\r\n\r\n<code>server-id=3\r\nlog-bin=mysql2-bin\r\nmaster-host=192.168.12.210\r\nmaster-user=backup\r\nmaster-password=123456\r\nmaster-port=3306</code>\r\n\r\n<code>MASTER_LOG_FILE=''mysql-bin.000001''</code>  # 与master 里执行show master status显示 的一致。\r\n\r\n<code>MASTER_LOG_POS=98 </code>                            # 同上\r\n\r\n&nbsp;\r\n\r\n4、在slave 的mysql 中执行\r\n\r\nslave stop ;slave start;\r\n\r\n以上更改my.cnf文件后均需要重启mysqld服务。\r\n\r\n&nbsp;\r\n\r\n5、创建测试数据库和表，表结构为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/3.jpg"><img class="alignnone  wp-image-41" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/3-300x97.jpg" alt="3" width="541" height="175" /></a>\r\n\r\n&nbsp;\r\n<h2>性能研究</h2>\r\n做好配置后，写了个php脚本，暴力跑了一夜数据。。。代码具体如下：\r\n<div> <code>mysql_connect(''192.168.12.210'', ''root'', ''123456'') or die( ''cannot connect mysql server'');</code>\r\n<code> mysql_select_db(''xiaoan'');</code>\r\n<code> $count =0;$time = 1;</code>\r\n<code> $stime=microtime(true);</code>\r\n<code> while( true ) {</code>\r\n<code>     $count ++ ;</code>\r\n<code>     $insert_sql = ''INSERT INTO numberic (first,second,third,forth) VALUES ''</code>\r\n<code>             . ''(\\'''' . rand(0, 10000) . ''\\'',\\'''' . rand(0,12000) . ''\\'',\\'''' . rand(0 , 103123123) . ''\\'',\\'''' . rand(0 , 123231) . ''\\'')'';</code>\r\n<code>  //   echo $insert_sql;exit();</code>\r\n<code>     mysql_query( $insert_sql) or die( mysql_error());</code>\r\n<code>     if ( $count == 100000 ) {</code>\r\n<code>         $end = microtime(true);</code>\r\n<code>         echo ''第''.$time . ''个十万数据插入耗时：''.($end - $stime) . PHP_EOL;</code>\r\n<code>         $stime = $end;</code>\r\n<code>         $time ++;</code>\r\n<code>         $count = 0;</code>\r\n<code>     }</code>\r\n<code> }</code></div>\r\n第二天登陆服务器时，发现磁盘暴满，而xiaoan库只有2.8G数据\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/QQ图片20141230122922.jpg"><img class="alignnone size-full wp-image-39" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/QQ图片20141230122922.jpg" alt="QQ图片20141230122922" width="203" height="129" /></a>\r\n\r\n进一步发现是mysql-bin占用过多空间\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/2.png"><img class="alignnone size-medium wp-image-40" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/2-166x300.png" alt="2" width="166" height="300" /></a>\r\n\r\n手动删除日志文件，重启服务即可（关于这块的配置说明，后续完善）。\r\n\r\n此时查询数据总量\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/4.jpg"><img class="alignnone size-medium wp-image-42" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/4-300x101.jpg" alt="4" width="300" height="101" /></a>\r\n\r\n对所有first进行求和，结果为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/5.jpg"><img class="alignnone size-medium wp-image-43" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/5-300x114.jpg" alt="5" width="300" height="114" /></a>\r\n\r\n对全库扫描，取最大值和最小值为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/6.jpg"><img class="alignnone size-medium wp-image-44" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/6-300x82.jpg" alt="6" width="300" height="82" /></a>\r\n\r\n对全库做匹配搜索\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/7.jpg"><img class="alignnone size-medium wp-image-45" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/7-300x81.jpg" alt="7" width="300" height="81" /></a>\r\n\r\n对各字段求最大值\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/8.jpg"><img class="alignnone size-medium wp-image-46" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/8-300x60.jpg" alt="8" width="300" height="60" /></a>\r\n\r\n以上几种简单的操作可以看出，mysql对大数据的处理性能非常一般，若是较为复杂的表结构，其对web系统的影响是很大的，所以在考虑千万量级的数据时，不要优先考虑mysql，当然，集群另当别论。\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'mysql 主从服务器性能研究', '', 'publish', 'open', 'open', '', 'mysql-%e4%b8%bb%e4%bb%8e%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%80%a7%e8%83%bd%e7%a0%94%e7%a9%b6', '', '', '2014-12-30 13:00:56', '2014-12-30 05:00:56', '', 0, 'http://www.wonhsi.com/xiaoan/?p=35', 0, 'post', '', 0),
(36, 1, '2014-12-29 18:47:52', '2014-12-29 10:47:52', '单个mysql服务器处理数据的瓶颈卡在百万级上，现在为了测试下两台mysql主从服务器的数据处理能力，并记录为这篇文档。\r\n\r\n主服务器为 192.168.12.210 后文中称为main mysql 从服务器为 192.168.12.116 后文称之为slave mysql\r\n\r\n配置说明：\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO `backup`@`192.168.12.116` IDENTIFIED BY ''123456'';\r\n\r\n&nbsp;', 'mysql 主从服务器性能研究', '', 'inherit', 'open', 'open', '', '35-revision-v1', '', '', '2014-12-29 18:47:52', '2014-12-29 10:47:52', '', 35, 'http://www.wonhsi.com/xiaoan/35-revision-v1/', 0, 'revision', '', 0),
(37, 1, '2014-12-30 11:57:08', '2014-12-30 03:57:08', '单个mysql服务器处理数据的瓶颈卡在百万级上，现在为了测试下两台mysql主从服务器的数据处理能力，并记录为这篇文档。\r\n\r\n主服务器为 192.168.12.210 后文中称为 master , 从服务器为 192.168.12.116 后文称之为slave\r\n\r\n配置说明：\r\n\r\n1、允许slave 访问master , 在master mysql中执行：\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO `backup`@`192.168.12.116` IDENTIFIED BY ''123456'';\r\n\r\n2、在master 的 /etc/my.conf 中的 [mysqld] 添加如下几行配置\r\n\r\n&nbsp;', 'mysql 主从服务器性能研究', '', 'inherit', 'open', 'open', '', '35-revision-v1', '', '', '2014-12-30 11:57:08', '2014-12-30 03:57:08', '', 35, 'http://www.wonhsi.com/xiaoan/35-revision-v1/', 0, 'revision', '', 0),
(38, 1, '2014-12-30 12:12:19', '2014-12-30 04:12:19', '单个mysql服务器处理数据的瓶颈卡在百万级上，现在为了测试下两台mysql主从服务器的数据处理能力，并记录为这篇文档。\r\n\r\n主服务器为 192.168.12.210 后文中称为 master , 从服务器为 192.168.12.116 后文称之为slave\r\n<h2>配置说明：</h2>\r\n1、允许slave 访问master , 在master mysql中执行：\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO `backup`@`192.168.12.116` IDENTIFIED BY ''123456'';\r\n\r\n2、在master 的 /etc/my.conf 中的 [mysqld] 添加如下几行配置\r\n\r\n<code>server-id = 1\r\nbinlog-do-db=xiaoan\r\n#log-bin=mysql-bin\r\nbinlog-ignore-db=mysql</code>\r\n\r\n3、在slave 的/etc/my.conf 中的[mysqld] 添加如下几行配置\r\n\r\n<code>server-id=3\r\nlog-bin=mysql2-bin\r\nmaster-host=192.168.12.210\r\nmaster-user=backup\r\nmaster-password=123456\r\nmaster-port=3306</code>\r\n\r\n<code>MASTER_LOG_FILE=''mysql-bin.000001''</code>  # 与master 里执行show master status显示 的一致。\r\n\r\n<code>MASTER_LOG_POS=98 </code>                            # 同上\r\n\r\n&nbsp;\r\n\r\n4、在slave 的mysql 中执行\r\n\r\nslave stop ;slave start;\r\n\r\n以上更改my.cnf文件后均需要重启mysqld服务。\r\n\r\n&nbsp;\r\n<h2>性能研究</h2>\r\n做好配置后，写了个php脚本，暴力跑了一夜数据。。。代码具体如下：\r\n<div> <code>mysql_connect(''192.168.12.210'', ''root'', '''') or die( ''cannot connect mysql server'');</code>\r\n<code> mysql_select_db(''xiaoan'');</code>\r\n<code> $count =0;$time = 1;</code>\r\n<code> $stime=microtime(true);</code>\r\n<code> while( true ) {</code>\r\n<code>     $count ++ ;</code>\r\n<code>     $insert_sql = ''INSERT INTO numberic (first,second,third,forth) VALUES ''</code>\r\n<code>             . ''(\\'''' . rand(0, 10000) . ''\\'',\\'''' . rand(0,12000) . ''\\'',\\'''' . rand(0 , 103123123) . ''\\'',\\'''' . rand(0 , 123231) . ''\\'')'';</code>\r\n<code>  //   echo $insert_sql;exit();</code>\r\n<code>     mysql_query( $insert_sql) or die( mysql_error());</code>\r\n<code>     if ( $count == 100000 ) {</code>\r\n<code>         $end = microtime(true);</code>\r\n<code>         echo ''第''.$time . ''个十万数据插入耗时：''.($end - $stime) . PHP_EOL;</code>\r\n<code>         $stime = $end;</code>\r\n<code>    $time ++;</code>\r\n<code>         $count = 0;</code>\r\n<code>     }</code>\r\n<code> }</code></div>\r\n&nbsp;', 'mysql 主从服务器性能研究', '', 'inherit', 'open', 'open', '', '35-revision-v1', '', '', '2014-12-30 12:12:19', '2014-12-30 04:12:19', '', 35, 'http://www.wonhsi.com/xiaoan/35-revision-v1/', 0, 'revision', '', 0),
(39, 1, '2014-12-30 12:32:05', '2014-12-30 04:32:05', '', 'QQ图片20141230122922', '', 'inherit', 'open', 'open', '', 'qq%e5%9b%be%e7%89%8720141230122922', '', '', '2014-12-30 12:32:05', '2014-12-30 04:32:05', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/QQ图片20141230122922.jpg', 0, 'attachment', 'image/jpeg', 0),
(40, 1, '2014-12-30 12:35:10', '2014-12-30 04:35:10', '', '2', '', 'inherit', 'open', 'open', '', '2', '', '', '2014-12-30 12:35:10', '2014-12-30 04:35:10', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/2.png', 0, 'attachment', 'image/png', 0),
(41, 1, '2014-12-30 12:40:26', '2014-12-30 04:40:26', '', '3', '', 'inherit', 'open', 'open', '', '3', '', '', '2014-12-30 12:40:26', '2014-12-30 04:40:26', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/3.jpg', 0, 'attachment', 'image/jpeg', 0),
(42, 1, '2014-12-30 12:40:26', '2014-12-30 04:40:26', '', '4', '', 'inherit', 'open', 'open', '', '4', '', '', '2014-12-30 12:40:26', '2014-12-30 04:40:26', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/4.jpg', 0, 'attachment', 'image/jpeg', 0),
(43, 1, '2014-12-30 12:40:27', '2014-12-30 04:40:27', '', '5', '', 'inherit', 'open', 'open', '', '5', '', '', '2014-12-30 12:40:27', '2014-12-30 04:40:27', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/5.jpg', 0, 'attachment', 'image/jpeg', 0),
(44, 1, '2014-12-30 12:54:34', '2014-12-30 04:54:34', '', '6', '', 'inherit', 'open', 'open', '', '6', '', '', '2014-12-30 12:54:34', '2014-12-30 04:54:34', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/6.jpg', 0, 'attachment', 'image/jpeg', 0),
(45, 1, '2014-12-30 12:54:35', '2014-12-30 04:54:35', '', '7', '', 'inherit', 'open', 'open', '', '7', '', '', '2014-12-30 12:54:35', '2014-12-30 04:54:35', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/7.jpg', 0, 'attachment', 'image/jpeg', 0),
(46, 1, '2014-12-30 12:58:43', '2014-12-30 04:58:43', '', '8', '', 'inherit', 'open', 'open', '', '8', '', '', '2014-12-30 12:58:43', '2014-12-30 04:58:43', '', 35, 'http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/8.jpg', 0, 'attachment', 'image/jpeg', 0),
(47, 1, '2014-12-30 12:59:12', '2014-12-30 04:59:12', '单个mysql服务器处理数据的瓶颈卡在百万级上，现在为了测试下两台mysql主从服务器的数据处理能力，并记录为这篇文档。\r\n\r\n主服务器为 192.168.12.210 后文中称为 master , 从服务器为 192.168.12.116 后文称之为slave\r\n<h2>配置说明：</h2>\r\n1、允许slave 访问master , 在master mysql中执行：\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO `backup`@`192.168.12.116` IDENTIFIED BY ''123456'';\r\n\r\n2、在master 的 /etc/my.conf 中的 [mysqld] 添加如下几行配置\r\n\r\n<code>server-id = 1\r\nbinlog-do-db=xiaoan\r\n#log-bin=mysql-bin\r\nbinlog-ignore-db=mysql</code>\r\n\r\n3、在slave 的/etc/my.conf 中的[mysqld] 添加如下几行配置\r\n\r\n<code>server-id=3\r\nlog-bin=mysql2-bin\r\nmaster-host=192.168.12.210\r\nmaster-user=backup\r\nmaster-password=123456\r\nmaster-port=3306</code>\r\n\r\n<code>MASTER_LOG_FILE=''mysql-bin.000001''</code>  # 与master 里执行show master status显示 的一致。\r\n\r\n<code>MASTER_LOG_POS=98 </code>                            # 同上\r\n\r\n&nbsp;\r\n\r\n4、在slave 的mysql 中执行\r\n\r\nslave stop ;slave start;\r\n\r\n以上更改my.cnf文件后均需要重启mysqld服务。\r\n\r\n&nbsp;\r\n\r\n5、创建测试数据库和表，表结构为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/3.jpg"><img class="alignnone  wp-image-41" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/3-300x97.jpg" alt="3" width="541" height="175" /></a>\r\n\r\n&nbsp;\r\n<h2>性能研究</h2>\r\n做好配置后，写了个php脚本，暴力跑了一夜数据。。。代码具体如下：\r\n<div> <code>mysql_connect(''192.168.12.210'', ''root'', ''123456'') or die( ''cannot connect mysql server'');</code>\r\n<code> mysql_select_db(''xiaoan'');</code>\r\n<code> $count =0;$time = 1;</code>\r\n<code> $stime=microtime(true);</code>\r\n<code> while( true ) {</code>\r\n<code>     $count ++ ;</code>\r\n<code>     $insert_sql = ''INSERT INTO numberic (first,second,third,forth) VALUES ''</code>\r\n<code>             . ''(\\'''' . rand(0, 10000) . ''\\'',\\'''' . rand(0,12000) . ''\\'',\\'''' . rand(0 , 103123123) . ''\\'',\\'''' . rand(0 , 123231) . ''\\'')'';</code>\r\n<code>  //   echo $insert_sql;exit();</code>\r\n<code>     mysql_query( $insert_sql) or die( mysql_error());</code>\r\n<code>     if ( $count == 100000 ) {</code>\r\n<code>         $end = microtime(true);</code>\r\n<code>         echo ''第''.$time . ''个十万数据插入耗时：''.($end - $stime) . PHP_EOL;</code>\r\n<code>         $stime = $end;</code>\r\n<code>         $time ++;</code>\r\n<code>         $count = 0;</code>\r\n<code>     }</code>\r\n<code> }</code></div>\r\n第二天登陆服务器时，发现磁盘暴满，而xiaoan库只有2.8G数据\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/QQ图片20141230122922.jpg"><img class="alignnone size-full wp-image-39" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/QQ图片20141230122922.jpg" alt="QQ图片20141230122922" width="203" height="129" /></a>\r\n\r\n进一步发现是mysql-bin占用过多空间\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/2.png"><img class="alignnone size-medium wp-image-40" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/2-166x300.png" alt="2" width="166" height="300" /></a>\r\n\r\n手动删除日志文件，重启服务即可（关于这块的配置说明，后续完善）。\r\n\r\n此时查询数据总量\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/4.jpg"><img class="alignnone size-medium wp-image-42" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/4-300x101.jpg" alt="4" width="300" height="101" /></a>\r\n\r\n对所有first进行求和，结果为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/5.jpg"><img class="alignnone size-medium wp-image-43" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/5-300x114.jpg" alt="5" width="300" height="114" /></a>\r\n\r\n对全库扫描，取最大值和最小值为\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/6.jpg"><img class="alignnone size-medium wp-image-44" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/6-300x82.jpg" alt="6" width="300" height="82" /></a>\r\n\r\n对全库做匹配搜索\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/7.jpg"><img class="alignnone size-medium wp-image-45" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/7-300x81.jpg" alt="7" width="300" height="81" /></a>\r\n\r\n对各字段求最大值\r\n\r\n<a href="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/8.jpg"><img class="alignnone size-medium wp-image-46" src="http://www.wonhsi.com/xiaoan/wp-content/uploads/2014/12/8-300x60.jpg" alt="8" width="300" height="60" /></a>\r\n\r\n以上几种简单的操作可以看出，mysql对大数据的处理性能非常一般，若是较为复杂的表结构，其对web系统的影响是很大的，所以在考虑千万量级的数据时，不要优先考虑mysql，当然，集群另当别论。\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'mysql 主从服务器性能研究', '', 'inherit', 'open', 'open', '', '35-revision-v1', '', '', '2014-12-30 12:59:12', '2014-12-30 04:59:12', '', 35, 'http://www.wonhsi.com/xiaoan/35-revision-v1/', 0, 'revision', '', 0),
(48, 1, '2014-12-30 13:06:06', '2014-12-30 05:06:06', ' ', '', '', 'publish', 'open', 'open', '', '48', '', '', '2014-12-30 13:06:38', '2014-12-30 05:06:38', '', 6, 'http://www.wonhsi.com/xiaoan/?p=48', 5, 'nav_menu_item', '', 0),
(49, 1, '2014-12-30 13:07:38', '2014-12-30 05:07:38', ' ', '', '', 'publish', 'open', 'open', '', '49', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 6, 'http://www.wonhsi.com/xiaoan/?p=49', 9, 'nav_menu_item', '', 0),
(50, 1, '2014-12-30 15:22:03', '2014-12-30 07:22:03', '指定端口：\r\n\r\ndocker pull ubuntu 这个命令中，可以指定端品进行，默认是用/var/run/docker.sock 套接字～如\r\n\r\n如 docker -H :5555 pull ubuntu , docker -H tcp:127.0.0.1:4243 pull ubuntu\r\n\r\n&nbsp;\r\n\r\n有趣的实验：\r\n<pre><code>    JOB=$(sudo docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")\r\n    查看输出 docker logs $JOB 每隔一秒会多输出一个hello world\r\n    关闭进程 docker kill $JOB\r\n\r\n    监听运行的容器\r\n    docker ps\r\n\r\n    docker run -d -p 4200:4200 crate/crate 有时会报 Error response from daemon: Cannot start container\r\n 这个时候 重启下服务即可。\r\n\r\n    create images 可以通过 Dockerfile 方式进行\r\n    如生成一个带httpd 的镜像\r\n    FROM centos \r\n    MAINTAINER xiaoan &lt;j@wonhsi.com&gt;\r\n    RUN yum -y update #保持resporitory 最新。\r\n    RUN yum -y install httpd #安装httpd服务\r\n    ADD WEBPAGE /var/www/html   #拷贝网站文件\r\n\r\n    执行 docker build . \r\n\r\n\r\n    当打开docker ps -a 时，一堆没用的container在后台，这种情况下是无法执行 docker rmi -f 删除所运行着的\r\nimages ， 一次性 docker rm 所有的container , docker rm $(docker ps -aq);然后执行docker rmi contain_id.\r\n    \r\n</code></pre>', 'docker 的基础概念学习笔记', '', 'inherit', 'open', 'open', '', '31-revision-v1', '', '', '2014-12-30 15:22:03', '2014-12-30 07:22:03', '', 31, 'http://www.wonhsi.com/xiaoan/31-revision-v1/', 0, 'revision', '', 0),
(56, 1, '2015-03-24 08:26:27', '2015-03-24 00:26:27', '配置php,apche环境比较熟悉，但还没有依据php.net提供的手册进行配置过，看过手册后发现，仅需两三步即可完成apache环境的配置。\n\n1、准备好apache windows x64版 ,官方仅提供源码。我一般从apache lounge上下载已编译好的<a title="apache 2.4.10 for windows x64" href="http://www.apachelounge.com/download/VC11/binaries/httpd-2.4.10-win64-VC11.zip" target="_blank">apache x64软件下载</a>。需要vc组件支持。<a title="Mircosoft vc++ x64/86.exe" href="http://www.microsoft.com/en-us/download/details.aspx?id=30679" target="_blank"> Mircosoft vc++ x64/86.exe</a>.\n\n2、下载php 5.6&nbsp; <a title="VC11 x64 Non Thread Safe" href="http://windows.php.net/downloads/releases/php-5.6.4-nts-Win32-VC11-x64.zip" target="_blank">VC11 x64 Non Thread Safe</a> （点击下载）。\n\n3、解压至某个目录下 如E:/server/php 和 E:/server/apache\n\n4、更改apache 配置文件。\n\n5、安装服务 在 E:/server/apache/bin/下执行 httpd -k install&nbsp; 和 httpd -k start ， 即可。\n\n&nbsp;\n\n&nbsp;', '基于windows 8.1 x64的php apache超简单配置', '', 'publish', 'open', 'open', '', '%e5%9f%ba%e4%ba%8ewindows-8-1-x64%e7%9a%84php-apache%e8%b6%85%e7%ae%80%e5%8d%95%e9%85%8d%e7%bd%ae', '', '', '2015-04-02 17:36:09', '2015-04-02 09:36:09', '', 0, 'http://www.wonhsi.com/xiaoan/?p=56', 0, 'post', '', 0),
(57, 1, '2015-01-04 18:12:14', '2015-01-04 10:12:14', '配置php,apche环境比较熟悉，但还没有依据php.net提供的手册进行配置过，看过手册后发现，仅需两三步即可完成apache环境的配置。\r\n\r\n1、准备好apache windows x64版 ,官方仅提供源码。我一般从apache lounge上下载已编译好的<a title="apache 2.4.10 for windows x64" href="http://www.apachelounge.com/download/VC11/binaries/httpd-2.4.10-win64-VC11.zip" target="_blank">apache x64软件下载</a>。需要vc组件支持。<a title="Mircosoft vc++ x64/86.exe" href="http://www.microsoft.com/en-us/download/details.aspx?id=30679" target="_blank"> Mircosoft vc++ x64/86.exe</a>.\r\n\r\n2、下载php 5.6  <a title="VC11 x64 Non Thread Safe" href="http://windows.php.net/downloads/releases/php-5.6.4-nts-Win32-VC11-x64.zip" target="_blank">VC11 x64 Non Thread Safe</a> （点击下载）。\r\n\r\n3、解压至某个目录下 如E:/server/php 和 E:/server/apache\r\n\r\n4、更改apache 配置文件。\r\n\r\n5、安装服务 在 E:/server/apache/bin/下执行 httpd -k install  和 httpd -k start ， 即可。\r\n\r\n&nbsp;\r\n\r\n&nbsp;', '基于windows 8.1 x64的php apache超简单配置', '', 'inherit', 'open', 'open', '', '56-revision-v1', '', '', '2015-01-04 18:12:14', '2015-01-04 10:12:14', '', 56, 'http://www.wonhsi.com/xiaoan/56-revision-v1/', 0, 'revision', '', 0),
(59, 1, '2015-01-16 14:42:54', '2015-01-16 06:42:54', '<pre>日 志 文 件 说    明 \r\n/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 \r\n/var/log/secure 与安全相关的日志信息 \r\n/var/log/maillog 与邮件相关的日志信息 \r\n/var/log/cron 与定时任务相关的日志信息 \r\n/var/log/spooler 与UUCP和news设备相关的日志信息 \r\n/var/log/boot.log 守护进程启动和停止相关的日志消息 \r\n \r\n \r\n系统： \r\n# uname -a   # 查看内核/操作系统/CPU信息 \r\n# cat /etc/issue \r\n# cat /etc/redhat-release # 查看操作系统版本 \r\n# cat /proc/cpuinfo  # 查看CPU信息 \r\n# hostname   # 查看计算机名 \r\n# lspci -tv   # 列出所有PCI设备 \r\n# lsusb -tv   # 列出所有USB设备 \r\n# lsmod    # 列出加载的内核模块 \r\n# env    # 查看环境变量 \r\n资源： \r\n# free -m   # 查看内存使用量和交换区使用量 \r\n# df -h    # 查看各分区使用情况 \r\n# du -sh &lt;目录名&gt;  # 查看指定目录的大小 \r\n# grep MemTotal /proc/meminfo # 查看内存总量 \r\n# grep MemFree /proc/meminfo # 查看空闲内存量 \r\n# uptime   # 查看系统运行时间、用户数、负载 \r\n# cat /proc/loadavg  # 查看系统负载 \r\n磁盘和分区： \r\n# mount | column -t  # 查看挂接的分区状态 \r\n# fdisk -l   # 查看所有分区 \r\n# swapon -s   # 查看所有交换分区 \r\n# hdparm -i /dev/hda  # 查看磁盘参数(仅适用于IDE设备) \r\n# dmesg | grep IDE  # 查看启动时IDE设备检测状况 \r\n网络： \r\n# ifconfig   # 查看所有网络接口的属性 \r\n# iptables -L   # 查看防火墙设置 \r\n# route -n   # 查看路由表 \r\n# netstat -lntp   # 查看所有监听端口 \r\n# netstat -antp   # 查看所有已经建立的连接 \r\n# netstat -s   # 查看网络统计信息 \r\n进程： \r\n# ps -ef   # 查看所有进程 \r\n# top    # 实时显示进程状态（另一篇文章里面有详细的介绍） \r\n用户： \r\n# w    # 查看活动用户 \r\n# id &lt;用户名&gt;   # 查看指定用户信息 \r\n# last    # 查看用户登录日志 \r\n# cut -d: -f1 /etc/passwd # 查看系统所有用户 \r\n# cut -d: -f1 /etc/group # 查看系统所有组 \r\n# crontab -l   # 查看当前用户的计划任务 \r\n服务： \r\n# chkconfig –list  # 列出所有系统服务 \r\n# chkconfig –list | grep on # 列出所有启动的系统服务 \r\n程序： \r\n# rpm -qa   # 查看所有安装的软件包\r\n\r\nnetstate -ntlp # 查看端品使用情况， 需要安装netstate。\r\n\r\n# iptables 防火墙简单配置\r\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT        #80端口加入防火墙准许\r\nservice iptables save     #规则保存\r\n\r\n\r\n#内存释放操作\r\necho 3 &gt; /proc/sys/vm/drop_caches</pre>', 'Linux服务管理的基本命令归纳', '', 'publish', 'open', 'open', '', 'linux%e6%9c%8d%e5%8a%a1%e7%ae%a1%e7%90%86%e7%9a%84%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4%e5%bd%92%e7%ba%b3', '', '', '2015-04-02 17:41:26', '2015-04-02 09:41:26', '', 0, 'http://www.wonhsi.com/xiaoan/?p=59', 0, 'post', '', 0),
(60, 1, '2015-01-16 14:42:54', '2015-01-16 06:42:54', '<pre>日 志 文 件 说    明 \r\n/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 \r\n/var/log/secure 与安全相关的日志信息 \r\n/var/log/maillog 与邮件相关的日志信息 \r\n/var/log/cron 与定时任务相关的日志信息 \r\n/var/log/spooler 与UUCP和news设备相关的日志信息 \r\n/var/log/boot.log 守护进程启动和停止相关的日志消息 \r\n \r\n \r\n系统： \r\n# uname -a   # 查看内核/操作系统/CPU信息 \r\n# cat /etc/issue \r\n# cat /etc/redhat-release # 查看操作系统版本 \r\n# cat /proc/cpuinfo  # 查看CPU信息 \r\n# hostname   # 查看计算机名 \r\n# lspci -tv   # 列出所有PCI设备 \r\n# lsusb -tv   # 列出所有USB设备 \r\n# lsmod    # 列出加载的内核模块 \r\n# env    # 查看环境变量 \r\n资源： \r\n# free -m   # 查看内存使用量和交换区使用量 \r\n# df -h    # 查看各分区使用情况 \r\n# du -sh &lt;目录名&gt;  # 查看指定目录的大小 \r\n# grep MemTotal /proc/meminfo # 查看内存总量 \r\n# grep MemFree /proc/meminfo # 查看空闲内存量 \r\n# uptime   # 查看系统运行时间、用户数、负载 \r\n# cat /proc/loadavg  # 查看系统负载 \r\n磁盘和分区： \r\n# mount | column -t  # 查看挂接的分区状态 \r\n# fdisk -l   # 查看所有分区 \r\n# swapon -s   # 查看所有交换分区 \r\n# hdparm -i /dev/hda  # 查看磁盘参数(仅适用于IDE设备) \r\n# dmesg | grep IDE  # 查看启动时IDE设备检测状况 \r\n网络： \r\n# ifconfig   # 查看所有网络接口的属性 \r\n# iptables -L   # 查看防火墙设置 \r\n# route -n   # 查看路由表 \r\n# netstat -lntp   # 查看所有监听端口 \r\n# netstat -antp   # 查看所有已经建立的连接 \r\n# netstat -s   # 查看网络统计信息 \r\n进程： \r\n# ps -ef   # 查看所有进程 \r\n# top    # 实时显示进程状态（另一篇文章里面有详细的介绍） \r\n用户： \r\n# w    # 查看活动用户 \r\n# id &lt;用户名&gt;   # 查看指定用户信息 \r\n# last    # 查看用户登录日志 \r\n# cut -d: -f1 /etc/passwd # 查看系统所有用户 \r\n# cut -d: -f1 /etc/group # 查看系统所有组 \r\n# crontab -l   # 查看当前用户的计划任务 \r\n服务： \r\n# chkconfig –list  # 列出所有系统服务 \r\n# chkconfig –list | grep on # 列出所有启动的系统服务 \r\n程序： \r\n# rpm -qa   # 查看所有安装的软件包</pre>', 'Linux服务管理的基本命令归纳', '', 'inherit', 'open', 'open', '', '59-revision-v1', '', '', '2015-01-16 14:42:54', '2015-01-16 06:42:54', '', 59, 'http://www.wonhsi.com/xiaoan/59-revision-v1/', 0, 'revision', '', 0),
(62, 1, '2015-01-16 14:52:21', '2015-01-16 06:52:21', '<pre>日 志 文 件 说    明 \n/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 \n/var/log/secure 与安全相关的日志信息 \n/var/log/maillog 与邮件相关的日志信息 \n/var/log/cron 与定时任务相关的日志信息 \n/var/log/spooler 与UUCP和news设备相关的日志信息 \n/var/log/boot.log 守护进程启动和停止相关的日志消息 \n \n \n系统： \n# uname -a   # 查看内核/操作系统/CPU信息 \n# cat /etc/issue \n# cat /etc/redhat-release # 查看操作系统版本 \n# cat /proc/cpuinfo  # 查看CPU信息 \n# hostname   # 查看计算机名 \n# lspci -tv   # 列出所有PCI设备 \n# lsusb -tv   # 列出所有USB设备 \n# lsmod    # 列出加载的内核模块 \n# env    # 查看环境变量 \n资源： \n# free -m   # 查看内存使用量和交换区使用量 \n# df -h    # 查看各分区使用情况 \n# du -sh &lt;目录名&gt;  # 查看指定目录的大小 \n# grep MemTotal /proc/meminfo # 查看内存总量 \n# grep MemFree /proc/meminfo # 查看空闲内存量 \n# uptime   # 查看系统运行时间、用户数、负载 \n# cat /proc/loadavg  # 查看系统负载 \n磁盘和分区： \n# mount | column -t  # 查看挂接的分区状态 \n# fdisk -l   # 查看所有分区 \n# swapon -s   # 查看所有交换分区 \n# hdparm -i /dev/hda  # 查看磁盘参数(仅适用于IDE设备) \n# dmesg | grep IDE  # 查看启动时IDE设备检测状况 \n网络： \n# ifconfig   # 查看所有网络接口的属性 \n# iptables -L   # 查看防火墙设置 \n# route -n   # 查看路由表 \n# netstat -lntp   # 查看所有监听端口 \n# netstat -antp   # 查看所有已经建立的连接 \n# netstat -s   # 查看网络统计信息 \n进程： \n# ps -ef   # 查看所有进程 \n# top    # 实时显示进程状态（另一篇文章里面有详细的介绍） \n用户： \n# w    # 查看活动用户 \n# id &lt;用户名&gt;   # 查看指定用户信息 \n# last    # 查看用户登录日志 \n# cut -d: -f1 /etc/passwd # 查看系统所有用户 \n# cut -d: -f1 /etc/group # 查看系统所有组 \n# crontab -l   # 查看当前用户的计划任务 \n服务： \n# chkconfig –list  # 列出所有系统服务 \n# chkconfig –list | grep on # 列出所有启动的系统服务 \n程序： \n# rpm -qa   # 查看所有安装的软件包\n\nnetstate -ntlp 查看端品使用情况， 需要安装netstate。\niptables 关闭</pre>', 'Linux服务管理的基本命令归纳', '', 'inherit', 'open', 'open', '', '59-autosave-v1', '', '', '2015-01-16 14:52:21', '2015-01-16 06:52:21', '', 59, 'http://www.wonhsi.com/xiaoan/59-autosave-v1/', 0, 'revision', '', 0),
(63, 1, '2015-01-16 14:53:59', '2015-01-16 06:53:59', '<pre>日 志 文 件 说    明 \r\n/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 \r\n/var/log/secure 与安全相关的日志信息 \r\n/var/log/maillog 与邮件相关的日志信息 \r\n/var/log/cron 与定时任务相关的日志信息 \r\n/var/log/spooler 与UUCP和news设备相关的日志信息 \r\n/var/log/boot.log 守护进程启动和停止相关的日志消息 \r\n \r\n \r\n系统： \r\n# uname -a   # 查看内核/操作系统/CPU信息 \r\n# cat /etc/issue \r\n# cat /etc/redhat-release # 查看操作系统版本 \r\n# cat /proc/cpuinfo  # 查看CPU信息 \r\n# hostname   # 查看计算机名 \r\n# lspci -tv   # 列出所有PCI设备 \r\n# lsusb -tv   # 列出所有USB设备 \r\n# lsmod    # 列出加载的内核模块 \r\n# env    # 查看环境变量 \r\n资源： \r\n# free -m   # 查看内存使用量和交换区使用量 \r\n# df -h    # 查看各分区使用情况 \r\n# du -sh &lt;目录名&gt;  # 查看指定目录的大小 \r\n# grep MemTotal /proc/meminfo # 查看内存总量 \r\n# grep MemFree /proc/meminfo # 查看空闲内存量 \r\n# uptime   # 查看系统运行时间、用户数、负载 \r\n# cat /proc/loadavg  # 查看系统负载 \r\n磁盘和分区： \r\n# mount | column -t  # 查看挂接的分区状态 \r\n# fdisk -l   # 查看所有分区 \r\n# swapon -s   # 查看所有交换分区 \r\n# hdparm -i /dev/hda  # 查看磁盘参数(仅适用于IDE设备) \r\n# dmesg | grep IDE  # 查看启动时IDE设备检测状况 \r\n网络： \r\n# ifconfig   # 查看所有网络接口的属性 \r\n# iptables -L   # 查看防火墙设置 \r\n# route -n   # 查看路由表 \r\n# netstat -lntp   # 查看所有监听端口 \r\n# netstat -antp   # 查看所有已经建立的连接 \r\n# netstat -s   # 查看网络统计信息 \r\n进程： \r\n# ps -ef   # 查看所有进程 \r\n# top    # 实时显示进程状态（另一篇文章里面有详细的介绍） \r\n用户： \r\n# w    # 查看活动用户 \r\n# id &lt;用户名&gt;   # 查看指定用户信息 \r\n# last    # 查看用户登录日志 \r\n# cut -d: -f1 /etc/passwd # 查看系统所有用户 \r\n# cut -d: -f1 /etc/group # 查看系统所有组 \r\n# crontab -l   # 查看当前用户的计划任务 \r\n服务： \r\n# chkconfig –list  # 列出所有系统服务 \r\n# chkconfig –list | grep on # 列出所有启动的系统服务 \r\n程序： \r\n# rpm -qa   # 查看所有安装的软件包\r\n\r\nnetstate -ntlp # 查看端品使用情况， 需要安装netstate。\r\n\r\n# iptables 防火墙简单配置\r\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT        #80端口加入防火墙准许\r\nservice iptables save     #规则保存\r\n\r\n\r\n#内存释放操作\r\necho 3 &gt; /proc/sys/vm/drop_caches</pre>', 'Linux服务管理的基本命令归纳', '', 'inherit', 'open', 'open', '', '59-revision-v1', '', '', '2015-01-16 14:53:59', '2015-01-16 06:53:59', '', 59, 'http://www.wonhsi.com/xiaoan/59-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(64, 1, '2015-03-24 08:26:41', '2015-03-24 00:26:41', '<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100 line_content noteable_line old">var date = new Date();</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100 line_content noteable_line old">var begin = date.getTime() - 28 * 86400000;</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100 line_content noteable_line old">var end = date.getTime() - 86400000;</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100 line_content noteable_line old">var beginTime = new Date(begin);</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100 line_content noteable_line old">var endTime = new Date(end);</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100 line_content noteable_line old">$("#endTime").val(endTime.getFullYear() + ''-'' + (endTime.getMonth() + 1) + ''-'' + endTime.getDate());</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file" style="height: 106px;" width="720">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100 line_content noteable_line old">$("#beginTime").val(beginTime.getFullYear() + ''-'' + (beginTime.getMonth() + 1) + ''-'' + beginTime.getDate());&nbsp;\n\n以上方式可以计算各种想要的日期。</td>\n</tr>\n</tbody>\n</table>', 'JS 对日期的处理', '', 'publish', 'open', 'open', '', 'js-%e5%af%b9%e6%97%a5%e6%9c%9f%e7%9a%84%e5%a4%84%e7%90%86', '', '', '2015-04-02 17:25:23', '2015-04-02 09:25:23', '', 0, 'http://www.wonhsi.com/xiaoan/?p=64', 0, 'post', '', 0),
(65, 1, '2015-01-21 17:49:45', '2015-01-21 09:49:45', '<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100 line_content noteable_line old">var date = new Date();</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100 line_content noteable_line old">var begin = date.getTime() - 28 * 86400000;</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100 line_content noteable_line old">var end = date.getTime() - 86400000;</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100 line_content noteable_line old">var beginTime = new Date(begin);</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100 line_content noteable_line old">var endTime = new Date(end);</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100 line_content noteable_line old">$("#endTime").val(endTime.getFullYear() + ''-'' + (endTime.getMonth() + 1) + ''-'' + endTime.getDate());</td>\r\n</tr>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old"></tr>\r\n</tbody>\r\n</table>\r\n<table class="text-file">\r\n<tbody>\r\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old">\r\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100 line_content noteable_line old">$("#beginTime").val(beginTime.getFullYear() + ''-'' + (beginTime.getMonth() + 1) + ''-'' + beginTime.getDate());\r\n\r\n&nbsp;\r\n\r\n以上方式可以计算各种想要的日期。</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'JS 对日期的处理', '', 'inherit', 'open', 'open', '', '64-revision-v1', '', '', '2015-01-21 17:49:45', '2015-01-21 09:49:45', '', 64, 'http://www.wonhsi.com/xiaoan/64-revision-v1/', 0, 'revision', '', 0),
(67, 1, '2015-01-29 10:42:47', '2015-01-29 02:42:47', '好久好久没用git gui 这个东西了，跟在linux上的操作其实是一样的。具体如下：\r\n\r\n打开git bash 生成ssh 密钥对\r\n\r\nssh-keygen -t rsa -f ~/.ssh/admin\r\n\r\n将生成的admin.pub 内容添加到git站点个人设置的key中\r\n\r\n在～/.ssh目录中添加配置文件，内容如下\r\n\r\nhost github.com   // git 网址或ip地址\r\n\r\nuser git\r\n\r\nhostname github.com\r\n\r\nport 22\r\n\r\nidentityfile C:\\Users\\Xiao_an\\.ssh\\admin  //指定私钥\r\n\r\n&nbsp;\r\n\r\nok , 可以正常检出了，试试吧小伙伴们。', 'windows 下git gui 私钥方式检出', '', 'publish', 'open', 'open', '', 'windows-%e4%b8%8bgit-gui-%e7%a7%81%e9%92%a5%e6%96%b9%e5%bc%8f%e6%a3%80%e5%87%ba', '', '', '2015-04-02 17:40:49', '2015-04-02 09:40:49', '', 0, 'http://www.wonhsi.com/xiaoan/?p=67', 0, 'post', '', 0),
(68, 1, '2015-01-29 10:42:47', '2015-01-29 02:42:47', '好久好久没用git gui 这个东西了，跟在linux上的操作其实是一样的。具体如下：\r\n\r\n打开git bash 生成ssh 密钥对\r\n\r\nssh-keygen -t rsa -f ~/.ssh/admin\r\n\r\n将生成的admin.pub 内容添加到git站点个人设置的key中\r\n\r\n在～/.ssh目录中添加配置文件，内容如下\r\n\r\nhost github.com   // git 网址或ip地址\r\n\r\nuser git\r\n\r\nhostname github.com\r\n\r\nport 22\r\n\r\nidentityfile C:\\Users\\Xiao_an\\.ssh\\admin  //指定私钥\r\n\r\n&nbsp;\r\n\r\nok , 可以正常检出了，试试吧小伙伴们。', 'windows 下git gui 私钥方式检出', '', 'inherit', 'open', 'open', '', '67-revision-v1', '', '', '2015-01-29 10:42:47', '2015-01-29 02:42:47', '', 67, 'http://www.wonhsi.com/xiaoan/67-revision-v1/', 0, 'revision', '', 0),
(70, 1, '2015-02-09 12:07:01', '2015-02-09 04:07:01', '在linux 上使用密码登录，在过多服务器管理下，密码一致存在很大的安全隐患，不一致的密码，又难记忆和管理，配置为钥登录是很好的解决方案。\r\n\r\n在 /root/.ssh 目录 下创建 authorized_keys 文件，若.ssh 目录 不存在，手动创建。\r\n\r\n更改authorized_keys 文件权限为600\r\n\r\n编辑配置文件 /etc/ssh/sshd_config ，查找并修改以下配置项\r\n\r\n&nbsp;\r\n\r\nPubkeyAuthentication yes\r\n\r\nAuthorizedKeysFile .ssh/authorized_keys\r\n\r\nPasswordAuthentication no\r\n\r\n&nbsp;\r\n\r\n重加载sshd 配置 ，service sshd reload\r\n\r\n&nbsp;\r\n\r\nok, 在authorized_keys 添加公钥即可。', 'centos 登录方式 配置为密钥登录', '', 'publish', 'open', 'open', '', 'centos-%e7%99%bb%e5%bd%95%e6%96%b9%e5%bc%8f-%e9%85%8d%e7%bd%ae%e4%b8%ba%e5%af%86%e9%92%a5%e7%99%bb%e5%bd%95', '', '', '2015-04-02 17:40:32', '2015-04-02 09:40:32', '', 0, 'http://www.wonhsi.com/xiaoan/?p=70', 0, 'post', '', 0),
(71, 1, '2015-02-09 12:07:01', '2015-02-09 04:07:01', '在linux 上使用密码登录，在过多服务器管理下，密码一致存在很大的安全隐患，不一致的密码，又难记忆和管理，配置为钥登录是很好的解决方案。\r\n\r\n在 /root/.ssh 目录 下创建 authorized_keys 文件，若.ssh 目录 不存在，手动创建。\r\n\r\n更改authorized_keys 文件权限为600\r\n\r\n编辑配置文件 /etc/ssh/sshd_config ，查找并修改以下配置项\r\n\r\n&nbsp;\r\n\r\nPubkeyAuthentication yes\r\n\r\nAuthorizedKeysFile .ssh/authorized_keys\r\n\r\nPasswordAuthentication no\r\n\r\n&nbsp;\r\n\r\n重加载sshd 配置 ，service sshd reload\r\n\r\n&nbsp;\r\n\r\nok, 在authorized_keys 添加公钥即可。', 'centos 登录方式 配置为密钥登录', '', 'inherit', 'open', 'open', '', '70-revision-v1', '', '', '2015-02-09 12:07:01', '2015-02-09 04:07:01', '', 70, 'http://www.wonhsi.com/xiaoan/70-revision-v1/', 0, 'revision', '', 0),
(72, 1, '2015-02-09 15:54:22', '2015-02-09 07:54:22', '需求：用户上传的word文档需要在线显示。\r\n\r\n实现方式：用libreoffice 将word文档转换成pdf，pdf通过pdf2swf转换成swf文件后可以直接在页面上展示。\r\n\r\n本文介绍 Libreoffice 下word　转成　pdf 方法。\r\n\r\n&nbsp;\r\n\r\n下载Libreoffice rpm包。\r\n\r\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\r\n\r\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n安装 yum localinstall *.rpm -y\r\n\r\n&nbsp;\r\n\r\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\r\n\r\nyum install -y mesa-libGL\r\n\r\nyum install -y mesa-libGLU\r\n\r\n&nbsp;\r\n\r\nok, 调用 命令\r\n\r\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\r\n\r\n即可实现word转pdf。\r\n\r\n&nbsp;\r\n\r\n经测试，转换后的pdf出现乱码现象，需要中文支持。\r\n\r\n安装中文支持包 yum -y groupinstall chinese-support\r\n\r\n修改语言配置 vim /etc/sysconfig/i18n\r\n\r\nLANG="zh_CN.UTF-8"  下次登录生效。\r\n\r\n或执行export LANG="zh_CN.UTF-8" 立即生效。\r\n\r\n&nbsp;\r\n\r\n在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over\r\n\r\n&nbsp;\r\n\r\n补：pdf转swf实现\r\n\r\nswftools官方软件已经好几年没有更新了。我采用了最近的一个版本的进行下载编译安装。\r\n\r\nwget http://www.swftools.org/swftools-0.9.1.tar.gz\r\n\r\ntar zxvf swftools-0.9.1.tar.gz\r\n\r\ncd swftools-0.9.1.tar.gz\r\n\r\n./configure\r\n\r\nmake\r\n\r\nmake install\r\n\r\npdf2swf -o ./2014.swf -T -z -t -f ./2014.pdf -s languagedir=/usr/local/share/xpdf/chinese-simplified -s flashversion=9\r\n\r\n&nbsp;\r\n\r\nover ~ 以上通过php 调用命令即可实现php的word可视化操作', 'centos 下 word 转pdf 实现【 补 pdf 转swf 实现 】', '', 'publish', 'open', 'open', '', 'centos-%e4%b8%8b-word-%e8%bd%acpdf-%e5%ae%9e%e7%8e%b0', '', '', '2015-04-02 17:40:12', '2015-04-02 09:40:12', '', 0, 'http://www.wonhsi.com/xiaoan/?p=72', 0, 'post', '', 0),
(73, 1, '2015-02-09 15:27:31', '2015-02-09 07:27:31', '需求：用户上传的word文档需要在线显示。\r\n\r\n实现方式：用libreoffice 将word文档转换成pdf，pdf是可以直接在网页上显示的。\r\n\r\n&nbsp;\r\n\r\n下载Libreoffice rpm包。\r\n\r\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\r\n\r\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n安装 yum localinstall *.rpm -y\r\n\r\n&nbsp;\r\n\r\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\r\n\r\nyum install -y mesa-libGL\r\n\r\nyum install -y mesa-libGLU\r\n\r\n&nbsp;\r\n\r\nok, 调用 命令\r\n\r\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\r\n\r\n即可实现word转pdf。\r\n\r\n&nbsp;', 'centos 下 word 转pdf 实现', '', 'inherit', 'open', 'open', '', '72-revision-v1', '', '', '2015-02-09 15:27:31', '2015-02-09 07:27:31', '', 72, 'http://www.wonhsi.com/xiaoan/72-revision-v1/', 0, 'revision', '', 0),
(74, 1, '2015-02-09 15:54:22', '2015-02-09 07:54:22', '需求：用户上传的word文档需要在线显示。\r\n\r\n实现方式：用libreoffice 将word文档转换成pdf，pdf是可以直接在网页上显示的。\r\n\r\n&nbsp;\r\n\r\n下载Libreoffice rpm包。\r\n\r\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\r\n\r\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n安装 yum localinstall *.rpm -y\r\n\r\n&nbsp;\r\n\r\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\r\n\r\nyum install -y mesa-libGL\r\n\r\nyum install -y mesa-libGLU\r\n\r\n&nbsp;\r\n\r\nok, 调用 命令\r\n\r\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\r\n\r\n即可实现word转pdf。\r\n\r\n&nbsp;\r\n\r\n经测试，转换后的pdf出现乱码现象，需要中文支持。\r\n\r\n安装中文支持包 yum -y groupinstall chinese-support\r\n\r\n修改语言配置 vim /etc/sysconfig/i18n\r\n\r\nLANG="zh_CN.UTF-8"  下次登录生效。\r\n\r\n或执行export LANG="zh_CN.UTF-8" 立即生效。\r\n\r\n&nbsp;\r\n\r\n在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over\r\n\r\n&nbsp;', 'centos 下 word 转pdf 实现', '', 'inherit', 'open', 'open', '', '72-revision-v1', '', '', '2015-02-09 15:54:22', '2015-02-09 07:54:22', '', 72, 'http://www.wonhsi.com/xiaoan/72-revision-v1/', 0, 'revision', '', 0),
(75, 1, '2015-03-03 15:27:44', '2015-03-03 07:27:44', '需求：用户上传的word文档需要在线显示。\n\n实现方式：用libreoffice 将word文档转换成pdf，pdf通过pdf2swf转换成swf文件后可以直接在页面上展示。\n\n本文介绍 Libreoffice 下word　转成　pdf 方法。\n\n&nbsp;\n\n下载Libreoffice rpm包。\n\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\n\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\n\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\n\n安装 yum localinstall *.rpm -y\n\n&nbsp;\n\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\n\nyum install -y mesa-libGL\n\nyum install -y mesa-libGLU\n\n&nbsp;\n\nok, 调用 命令\n\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\n\n即可实现word转pdf。\n\n&nbsp;\n\n经测试，转换后的pdf出现乱码现象，需要中文支持。\n\n安装中文支持包 yum -y groupinstall chinese-support\n\n修改语言配置 vim /etc/sysconfig/i18n\n\nLANG="zh_CN.UTF-8"  下次登录生效。\n\n或执行export LANG="zh_CN.UTF-8" 立即生效。\n\n&nbsp;\n\n在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over\n\n&nbsp;\n\n补：pdf转swf实现\n\nswftools官方软件已经好几年没有更新了。我采用了最近的一个版本的进行下载编译安装。\n\nwget http://www.swftools.org/swftools-0.9.1.tar.gz\n\ntar zxvf swftools-0.9.1.tar.gz\n\ncd swftools-0.9.1.tar.gz\n\n./configure\n\nmake\n\nmake install\n\npdf2swf -o ./2014.swf -T -z -t -f ./2014.pdf -s languagedir=/usr/local/share/xpdf/chinese-simplified -s flashversion=9\n\n&nbsp;\n\nover ~ 以上通过php', 'centos 下 word 转pdf 实现【 补 pdf 转swf 实现 】', '', 'inherit', 'open', 'open', '', '72-autosave-v1', '', '', '2015-03-03 15:27:44', '2015-03-03 07:27:44', '', 72, 'http://www.wonhsi.com/xiaoan/72-autosave-v1/', 0, 'revision', '', 0),
(76, 1, '2015-02-09 17:50:19', '2015-02-09 09:50:19', '需求：用户上传的word文档需要在线显示。\r\n\r\n实现方式：用libreoffice 将word文档转换成pdf，pdf通过pdf2swf转换成swf文件后可以直接在页面上展示。\r\n\r\n本文介绍 Libreoffice 下word　转成　pdf 方法。\r\n\r\n&nbsp;\r\n\r\n下载Libreoffice rpm包。\r\n\r\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\r\n\r\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n安装 yum localinstall *.rpm -y\r\n\r\n&nbsp;\r\n\r\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\r\n\r\nyum install -y mesa-libGL\r\n\r\nyum install -y mesa-libGLU\r\n\r\n&nbsp;\r\n\r\nok, 调用 命令\r\n\r\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\r\n\r\n即可实现word转pdf。\r\n\r\n&nbsp;\r\n\r\n经测试，转换后的pdf出现乱码现象，需要中文支持。\r\n\r\n安装中文支持包 yum -y groupinstall chinese-support\r\n\r\n修改语言配置 vim /etc/sysconfig/i18n\r\n\r\nLANG="zh_CN.UTF-8"  下次登录生效。\r\n\r\n或执行export LANG="zh_CN.UTF-8" 立即生效。\r\n\r\n&nbsp;\r\n\r\n在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over\r\n\r\n&nbsp;', 'centos 下 word 转pdf 实现', '', 'inherit', 'open', 'open', '', '72-revision-v1', '', '', '2015-02-09 17:50:19', '2015-02-09 09:50:19', '', 72, 'http://www.wonhsi.com/xiaoan/72-revision-v1/', 0, 'revision', '', 0),
(77, 1, '2015-02-09 23:21:00', '2015-02-09 15:21:00', '<p>需求：用户上传的word文档需要在线显示。</p>\r\n<p>实现方式：用libreoffice 将word文档转换成pdf，pdf通过pdf2swf转换成swf文件后可以直接在页面上展示。</p>\r\n<p>本文介绍 Libreoffice 下word　转成　pdf 方法。</p>\r\n<p>&nbsp;</p>\r\n<p>下载Libreoffice rpm包。</p>\r\n<p>wget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz</p>\r\n<p>截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。</p>\r\n<p>解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz</p>\r\n<p>安装 yum localinstall *.rpm -y</p>\r\n<p>&nbsp;</p>\r\n<p>安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。</p>\r\n<p>yum install -y mesa-libGL</p>\r\n<p>yum install -y mesa-libGLU</p>\r\n<p>&nbsp;</p>\r\n<p>ok, 调用 命令</p>\r\n<p>libreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"</p>\r\n<p>即可实现word转pdf。</p>\r\n<p>&nbsp;</p>\r\n<p>经测试，转换后的pdf出现乱码现象，需要中文支持。</p>\r\n<p>安装中文支持包 yum -y groupinstall chinese-support</p>\r\n<p>修改语言配置 vim /etc/sysconfig/i18n</p>\r\n<p>LANG="zh_CN.UTF-8"  下次登录生效。</p>\r\n<p>或执行export LANG="zh_CN.UTF-8" 立即生效。</p>\r\n<p>&nbsp;</p>\r\n<p>在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over</p>\r\n<p>&nbsp;</p>\r\n', 'centos 下 word 转pdf 实现', '', 'inherit', 'open', 'open', '', '72-revision-v1', '', '', '2015-02-09 23:21:00', '2015-02-09 15:21:00', '', 72, 'http://www.wonhsi.com/xiaoan/?p=77', 0, 'revision', '', 0),
(78, 1, '2015-02-28 15:09:47', '2015-02-28 07:09:47', '最近接触git这块，在尝试linux服务器上使用ssh方式git clone 源码时，发现其中是有很多需要学习与掌握，涉及ssh密钥配置，git基本操作，等等。\r\n\r\n一、SSH密钥配置：\r\n\r\n备份 ～/.ssh/ 目录，配置git 用户和邮件\r\n\r\ngit  config --global user.name "xiaoan"\r\n\r\ngit  config --global user.email "j@wonhsi.com"\r\n\r\n&nbsp;\r\n\r\n二、生成密钥对\r\n\r\nssh-keygen -t rsa -C "j@wonhsi.com"\r\n\r\n将.pub文件的内容填写在github的ssh密钥里\r\n<p style="text-align: left;">三、测试 ssh</p>\r\n<p style="text-align: left;">ssh -T git@github.com</p>\r\n<p style="text-align: left;">若成功，返回Hello ~字样。</p>\r\n<p style="text-align: left;">四、git clone</p>\r\n<p style="text-align: left;">git clone git@github.com:wonhsi/MyWord.git</p>\r\n&nbsp;\r\n\r\n现在开始练习基本的git操作指令：( 下面是一篇比较好的博文，涉及git一些常用用法。)\r\n\r\nhttp://segmentfault.com/blog/news/1190000002442065', 'GIT 的基本配置与使用', '', 'inherit', 'open', 'open', '', '23-revision-v1', '', '', '2015-02-28 15:09:47', '2015-02-28 07:09:47', '', 23, 'http://www.wonhsi.com/xiaoan/?p=78', 0, 'revision', '', 0),
(79, 1, '2015-02-28 15:11:41', '2015-02-28 07:11:41', '最近接触git这块，在尝试linux服务器上使用ssh方式git clone 源码时，发现其中是有很多需要学习与掌握，涉及ssh密钥配置，git基本操作，等等。\r\n\r\n一、SSH密钥配置：\r\n\r\n备份 ～/.ssh/ 目录，配置git 用户和邮件\r\n\r\ngit  config --global user.name "xiaoan"\r\n\r\ngit  config --global user.email "j@wonhsi.com"\r\n\r\n&nbsp;\r\n\r\n二、生成密钥对\r\n\r\nssh-keygen -t rsa -C "j@wonhsi.com"\r\n\r\n将.pub文件的内容填写在github的ssh密钥里\r\n<p style="text-align: left;">三、测试 ssh</p>\r\n<p style="text-align: left;">ssh -T git@github.com</p>\r\n<p style="text-align: left;">若成功，返回Hello ~字样。</p>\r\n<p style="text-align: left;">四、git clone</p>\r\n<p style="text-align: left;">git clone git@github.com:wonhsi/MyWord.git</p>\r\n&nbsp;\r\n\r\n现在开始练习基本的git操作指令：( 下面是一篇比较好的博文，涉及git一些常用用法。)\r\n\r\n<a title="Git 远程操作详解（再不会 Git 就真的没团队收你了，嗯哼）" href="http://segmentfault.com/blog/news/1190000002442065" target="_blank">http://segmentfault.com/blog/news/1190000002442065</a>', 'GIT 的基本配置与使用', '', 'inherit', 'open', 'open', '', '23-revision-v1', '', '', '2015-02-28 15:11:41', '2015-02-28 07:11:41', '', 23, 'http://www.wonhsi.com/xiaoan/?p=79', 0, 'revision', '', 0),
(81, 1, '2015-03-02 14:54:56', '2015-03-02 06:54:56', '<div id="cnblogs_post_body">\r\n\r\nyum是什么\r\nyum = Yellow dog Updater, Modified\r\n主要功能是更方便的添加/删除/更新RPM包.\r\n它能自动解决包的倚赖性问题.\r\n它能便于管理大量系统的更新问题\r\nyum特点\r\n可以同时配置多个资源库(Repository)\r\n简洁的配置文件(/etc/yum.conf\r\n自动解决增加或删除rpm包时遇到的倚赖性问题\r\n使用方便\r\n保持与RPM数据库的一致性\r\n\r\nyum安装\r\nCentOS自带(yum-*.noarch.rpm)\r\n#rpm -ivh yum-*.noarch.rpm\r\n在第一次启用yum之前首先需要导入系统的RPM-GPG-KEY：\r\n#rpm --import /usr/share/doc/centos-release-3(4)/RPM-GPG-KEY-CentOS-3(4)\r\n\r\nyum指令\r\n注:当第一次使用yum或yum资源库有更新时,yum会自动下载所有所需的headers放置于/var/cache/yum目录下,所需时间可能较长.\r\n\r\nrpm包的更新\r\n检查可更新的rpm包\r\n#yum check-update\r\n更新所有的rpm包\r\n#yum update\r\n更新指定的rpm包,如更新kernel和kernel source\r\n#yum update kernel kernel-source\r\n大规模的版本升级,与yum update不同的是,连旧的淘汰的包也升级\r\n#yum upgrade\r\n\r\nrpm包的安装和删除\r\n安装rpm包,如xmms-mp3\r\n#yum install xmms-mp3\r\n删除rpm包,包括与该包有倚赖性的包\r\n#yum remove licq\r\n注:同时会提示删除licq-gnome,licq-qt,licq-text\r\n\r\nyum暂存(/var/cache/yum/)的相关参数\r\n清除暂存中rpm包文件\r\n#yum clean packages\r\n清除暂存中rpm头文件\r\n#yum clearn headers\r\n清除暂存中旧的rpm头文件\r\n#yum clean oldheaders\r\n清除暂存中旧的rpm头文件和包文件\r\n#yum clearn 或#yum clearn all\r\n注:相当于yum clean packages + yum clean oldheaders\r\n\r\n包列表\r\n列出资源库中所有可以安装或更新的rpm包\r\n#yum list\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包\r\n#yum list mozilla#yum list mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包\r\n列出资源库中所有可以更新的rpm包\r\n#yum list updates\r\n列出已经安装的所有的rpm包\r\n#yum list installed\r\n列出已经安装的但是不包含在资源库中的rpm包\r\n#yum list extras\r\n注:通过其它网站下载安装的rpm包\r\n\r\nrpm包信息显示(info参数同list)\r\n列出资源库中所有可以安装或更新的rpm包的信息\r\n#yum info\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包的信息\r\n#yum info mozilla#yum info mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包的信息\r\n列出资源库中所有可以更新的rpm包的信息\r\n#yum info updates\r\n列出已经安装的所有的rpm包的信息\r\n#yum info installed\r\n列出已经安装的但是不包含在资源库中的rpm包的信息\r\n#yum info extras\r\n注:通过其它网站下载安装的rpm包的信息\r\n\r\n搜索rpm包\r\n搜索匹配特定字符的rpm包\r\n#yum search mozilla\r\n注:在rpm包名,包描述等中搜索\r\n搜索有包含特定文件名的rpm包\r\n#yum provides realplay\r\n\r\n增加资源库\r\n例如:增加rpm.livna.org作为资源库\r\n安装Livna.org rpms GPG key\r\n#rpm --import <a href="http://rpm.livna.org/RPM-LIVNA-GPG-KEY">http://rpm.livna.org/RPM-LIVNA-GPG-KEY</a>\r\n检查GPG Key\r\n# rpm -qa gpg-pubkey*\r\n显示Key信息\r\n#rpm -qi gpg-pubkey-a109b1ec-3f6e28d5\r\n(注:如果要删除Key,使用#rpm -e gpg-pubkey-a109b1ec-3f6e28d5)\r\n\r\nyum常用的命令\r\n\r\n# yum install xxx            安装xxx软件\r\n\r\n# yum info xxx                查看xxx软件的信息\r\n\r\n# yum remove xxx        删除软件包\r\n\r\n# yum list                        列出软件包\r\n\r\n# yum clean                    清除缓冲和就的包\r\n\r\n# yum provides xxx        以xxx为关键字搜索包（提供的信息为关键字）\r\n\r\n# yum search xxx           搜索软件包（以名字为关键字）\r\n\r\n# yum groupupdate xxx\r\n\r\n# yum grouplist xxx\r\n\r\n# yum groupremove xxx\r\n\r\n这三个都是一组为单位进行升级 列表和删除的操作。。比如 "Mysql Database"就是一个组会同时操作相关的所有软件包；\r\n\r\n# yum update                系统升级\r\n\r\n# yum list available        列出所有升级源上的包；\r\n\r\n# yum list updates         列出所有升级源上的可以更新包；\r\n\r\n# yum list installed         列出已经安装的包；\r\n\r\n# yun update kernel       升级内核；\r\nyum常用的源\r\n\r\n1) 自动选择最快的源\r\n\r\n由于yum中有的mirror速度是非常慢的，如果yum选择了这个mirror，这个时候yum就会非常慢，对此，可以下载fastestmirror插件，它会自动选择最快的mirror：\r\n\r\n#yum install yum-fastestmirror\r\n\r\n配置文件：（一般不用动）/etc/yum/pluginconf.d/fastestmirror.conf\r\n\r\n你的yum镜像的速度测试记录文件：/var/cache/yum/timedhosts.txt\r\n\r\n(2)使用图形界面的yum\r\n\r\n如果觉得命令行的yum不方便，那么可以使用图形化的yumex，这个看起来更方便，因为可以自由地选择软件仓库：\r\n\r\n#yum install yumex\r\n\r\n然后在系统工具中就可以看到yum extender了。实际上系统自带的“添加/删除程序“也可以实现图形化的软件安装，但有些yumex的功能它没有。\r\n\r\n</div>', 'YUM 详解说明', '', 'publish', 'open', 'open', '', 'yum-%e8%af%a6%e8%a7%a3%e8%af%b4%e6%98%8e', '', '', '2015-04-02 17:39:50', '2015-04-02 09:39:50', '', 0, 'http://www.wonhsi.com/xiaoan/?p=81', 0, 'post', '', 0),
(82, 1, '2015-03-02 14:54:56', '2015-03-02 06:54:56', '<div id="cnblogs_post_body">\r\n\r\nyum是什么\r\nyum = Yellow dog Updater, Modified\r\n主要功能是更方便的添加/删除/更新RPM包.\r\n它能自动解决包的倚赖性问题.\r\n它能便于管理大量系统的更新问题\r\nyum特点\r\n可以同时配置多个资源库(Repository)\r\n简洁的配置文件(/etc/yum.conf\r\n自动解决增加或删除rpm包时遇到的倚赖性问题\r\n使用方便\r\n保持与RPM数据库的一致性\r\n\r\nyum安装\r\nCentOS自带(yum-*.noarch.rpm)\r\n#rpm -ivh yum-*.noarch.rpm\r\n在第一次启用yum之前首先需要导入系统的RPM-GPG-KEY：\r\n#rpm --import /usr/share/doc/centos-release-3(4)/RPM-GPG-KEY-CentOS-3(4)\r\n\r\nyum指令\r\n注:当第一次使用yum或yum资源库有更新时,yum会自动下载所有所需的headers放置于/var/cache/yum目录下,所需时间可能较长.\r\n\r\nrpm包的更新\r\n检查可更新的rpm包\r\n#yum check-update\r\n更新所有的rpm包\r\n#yum update\r\n更新指定的rpm包,如更新kernel和kernel source\r\n#yum update kernel kernel-source\r\n大规模的版本升级,与yum update不同的是,连旧的淘汰的包也升级\r\n#yum upgrade\r\n\r\nrpm包的安装和删除\r\n安装rpm包,如xmms-mp3\r\n#yum install xmms-mp3\r\n删除rpm包,包括与该包有倚赖性的包\r\n#yum remove licq\r\n注:同时会提示删除licq-gnome,licq-qt,licq-text\r\n\r\nyum暂存(/var/cache/yum/)的相关参数\r\n清除暂存中rpm包文件\r\n#yum clean packages\r\n清除暂存中rpm头文件\r\n#yum clearn headers\r\n清除暂存中旧的rpm头文件\r\n#yum clean oldheaders\r\n清除暂存中旧的rpm头文件和包文件\r\n#yum clearn 或#yum clearn all\r\n注:相当于yum clean packages + yum clean oldheaders\r\n\r\n包列表\r\n列出资源库中所有可以安装或更新的rpm包\r\n#yum list\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包\r\n#yum list mozilla#yum list mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包\r\n列出资源库中所有可以更新的rpm包\r\n#yum list updates\r\n列出已经安装的所有的rpm包\r\n#yum list installed\r\n列出已经安装的但是不包含在资源库中的rpm包\r\n#yum list extras\r\n注:通过其它网站下载安装的rpm包\r\n\r\nrpm包信息显示(info参数同list)\r\n列出资源库中所有可以安装或更新的rpm包的信息\r\n#yum info\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包的信息\r\n#yum info mozilla#yum info mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包的信息\r\n列出资源库中所有可以更新的rpm包的信息\r\n#yum info updates\r\n列出已经安装的所有的rpm包的信息\r\n#yum info installed\r\n列出已经安装的但是不包含在资源库中的rpm包的信息\r\n#yum info extras\r\n注:通过其它网站下载安装的rpm包的信息\r\n\r\n搜索rpm包\r\n搜索匹配特定字符的rpm包\r\n#yum search mozilla\r\n注:在rpm包名,包描述等中搜索\r\n搜索有包含特定文件名的rpm包\r\n#yum provides realplay\r\n\r\n增加资源库\r\n例如:增加rpm.livna.org作为资源库\r\n安装Livna.org rpms GPG key\r\n#rpm --import <a href="http://rpm.livna.org/RPM-LIVNA-GPG-KEY">http://rpm.livna.org/RPM-LIVNA-GPG-KEY</a>\r\n检查GPG Key\r\n# rpm -qa gpg-pubkey*\r\n显示Key信息\r\n#rpm -qi gpg-pubkey-a109b1ec-3f6e28d5\r\n(注:如果要删除Key,使用#rpm -e gpg-pubkey-a109b1ec-3f6e28d5)\r\n\r\nyum常用的命令\r\n\r\n# yum install xxx            安装xxx软件\r\n\r\n# yum info xxx                查看xxx软件的信息\r\n\r\n# yum remove xxx        删除软件包\r\n\r\n# yum list                        列出软件包\r\n\r\n# yum clean                    清除缓冲和就的包\r\n\r\n# yum provides xxx        以xxx为关键字搜索包（提供的信息为关键字）\r\n\r\n# yum search xxx           搜索软件包（以名字为关键字）\r\n\r\n# yum groupupdate xxx\r\n\r\n# yum grouplist xxx\r\n\r\n# yum groupremove xxx\r\n\r\n这三个都是一组为单位进行升级 列表和删除的操作。。比如 "Mysql Database"就是一个组会同时操作相关的所有软件包；\r\n\r\n# yum update                系统升级\r\n\r\n# yum list available        列出所有升级源上的包；\r\n\r\n# yum list updates         列出所有升级源上的可以更新包；\r\n\r\n# yum list installed         列出已经安装的包；\r\n\r\n# yun update kernel       升级内核；\r\nyum常用的源\r\n\r\n1) 自动选择最快的源\r\n\r\n由于yum中有的mirror速度是非常慢的，如果yum选择了这个mirror，这个时候yum就会非常慢，对此，可以下载fastestmirror插件，它会自动选择最快的mirror：\r\n\r\n#yum install yum-fastestmirror\r\n\r\n配置文件：（一般不用动）/etc/yum/pluginconf.d/fastestmirror.conf\r\n\r\n你的yum镜像的速度测试记录文件：/var/cache/yum/timedhosts.txt\r\n\r\n(2)使用图形界面的yum\r\n\r\n如果觉得命令行的yum不方便，那么可以使用图形化的yumex，这个看起来更方便，因为可以自由地选择软件仓库：\r\n\r\n#yum install yumex\r\n\r\n然后在系统工具中就可以看到yum extender了。实际上系统自带的“添加/删除程序“也可以实现图形化的软件安装，但有些yumex的功能它没有。\r\n\r\n</div>', 'YUM 详解说明', '', 'inherit', 'open', 'open', '', '81-revision-v1', '', '', '2015-03-02 14:54:56', '2015-03-02 06:54:56', '', 81, 'http://www.wonhsi.com/xiaoan/?p=82', 0, 'revision', '', 0),
(83, 1, '2015-03-02 14:55:17', '2015-03-02 06:55:17', '<div id="cnblogs_post_body">\r\n\r\nyum是什么\r\nyum = Yellow dog Updater, Modified\r\n主要功能是更方便的添加/删除/更新RPM包.\r\n它能自动解决包的倚赖性问题.\r\n它能便于管理大量系统的更新问题\r\nyum特点\r\n可以同时配置多个资源库(Repository)\r\n简洁的配置文件(/etc/yum.conf\r\n自动解决增加或删除rpm包时遇到的倚赖性问题\r\n使用方便\r\n保持与RPM数据库的一致性\r\n\r\nyum安装\r\nCentOS自带(yum-*.noarch.rpm)\r\n#rpm -ivh yum-*.noarch.rpm\r\n在第一次启用yum之前首先需要导入系统的RPM-GPG-KEY：\r\n#rpm --import /usr/share/doc/centos-release-3(4)/RPM-GPG-KEY-CentOS-3(4)\r\n\r\nyum指令\r\n注:当第一次使用yum或yum资源库有更新时,yum会自动下载所有所需的headers放置于/var/cache/yum目录下,所需时间可能较长.\r\n\r\nrpm包的更新\r\n检查可更新的rpm包\r\n#yum check-update\r\n更新所有的rpm包\r\n#yum update\r\n更新指定的rpm包,如更新kernel和kernel source\r\n#yum update kernel kernel-source\r\n大规模的版本升级,与yum update不同的是,连旧的淘汰的包也升级\r\n#yum upgrade\r\n\r\nrpm包的安装和删除\r\n安装rpm包,如xmms-mp3\r\n#yum install xmms-mp3\r\n删除rpm包,包括与该包有倚赖性的包\r\n#yum remove licq\r\n注:同时会提示删除licq-gnome,licq-qt,licq-text\r\n\r\nyum暂存(/var/cache/yum/)的相关参数\r\n清除暂存中rpm包文件\r\n#yum clean packages\r\n清除暂存中rpm头文件\r\n#yum clearn headers\r\n清除暂存中旧的rpm头文件\r\n#yum clean oldheaders\r\n清除暂存中旧的rpm头文件和包文件\r\n#yum clearn 或#yum clearn all\r\n注:相当于yum clean packages + yum clean oldheaders\r\n\r\n包列表\r\n列出资源库中所有可以安装或更新的rpm包\r\n#yum list\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包\r\n#yum list mozilla#yum list mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包\r\n列出资源库中所有可以更新的rpm包\r\n#yum list updates\r\n列出已经安装的所有的rpm包\r\n#yum list installed\r\n列出已经安装的但是不包含在资源库中的rpm包\r\n#yum list extras\r\n注:通过其它网站下载安装的rpm包\r\n\r\nrpm包信息显示(info参数同list)\r\n列出资源库中所有可以安装或更新的rpm包的信息\r\n#yum info\r\n列出资源库中特定的可以安装或更新以及已经安装的rpm包的信息\r\n#yum info mozilla#yum info mozilla*\r\n注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包的信息\r\n列出资源库中所有可以更新的rpm包的信息\r\n#yum info updates\r\n列出已经安装的所有的rpm包的信息\r\n#yum info installed\r\n列出已经安装的但是不包含在资源库中的rpm包的信息\r\n#yum info extras\r\n注:通过其它网站下载安装的rpm包的信息\r\n\r\n搜索rpm包\r\n搜索匹配特定字符的rpm包\r\n#yum search mozilla\r\n注:在rpm包名,包描述等中搜索\r\n搜索有包含特定文件名的rpm包\r\n#yum provides realplay\r\n\r\n增加资源库\r\n例如:增加rpm.livna.org作为资源库\r\n安装Livna.org rpms GPG key\r\n#rpm --import <a href="http://rpm.livna.org/RPM-LIVNA-GPG-KEY">http://rpm.livna.org/RPM-LIVNA-GPG-KEY</a>\r\n检查GPG Key\r\n# rpm -qa gpg-pubkey*\r\n显示Key信息\r\n#rpm -qi gpg-pubkey-a109b1ec-3f6e28d5\r\n(注:如果要删除Key,使用#rpm -e gpg-pubkey-a109b1ec-3f6e28d5)\r\n\r\nyum常用的命令\r\n\r\n# yum install xxx            安装xxx软件\r\n\r\n# yum info xxx                查看xxx软件的信息\r\n\r\n# yum remove xxx        删除软件包\r\n\r\n# yum list                        列出软件包\r\n\r\n# yum clean                    清除缓冲和就的包\r\n\r\n# yum provides xxx        以xxx为关键字搜索包（提供的信息为关键字）\r\n\r\n# yum search xxx           搜索软件包（以名字为关键字）\r\n\r\n# yum groupupdate xxx\r\n\r\n# yum grouplist xxx\r\n\r\n# yum groupremove xxx\r\n\r\n这三个都是一组为单位进行升级 列表和删除的操作。。比如 "Mysql Database"就是一个组会同时操作相关的所有软件包；\r\n\r\n# yum update                系统升级\r\n\r\n# yum list available        列出所有升级源上的包；\r\n\r\n# yum list updates         列出所有升级源上的可以更新包；\r\n\r\n# yum list installed         列出已经安装的包；\r\n\r\n# yun update kernel       升级内核；\r\nyum常用的源\r\n\r\n1) 自动选择最快的源\r\n\r\n由于yum中有的mirror速度是非常慢的，如果yum选择了这个mirror，这个时候yum就会非常慢，对此，可以下载fastestmirror插件，它会自动选择最快的mirror：\r\n\r\n#yum install yum-fastestmirror\r\n\r\n配置文件：（一般不用动）/etc/yum/pluginconf.d/fastestmirror.conf\r\n\r\n你的yum镜像的速度测试记录文件：/var/cache/yum/timedhosts.txt\r\n\r\n(2)使用图形界面的yum\r\n\r\n如果觉得命令行的yum不方便，那么可以使用图形化的yumex，这个看起来更方便，因为可以自由地选择软件仓库：\r\n\r\n#yum install yumex\r\n\r\n然后在系统工具中就可以看到yum extender了。实际上系统自带的“添加/删除程序“也可以实现图形化的软件安装，但有些yumex的功能它没有。\r\n\r\n</div>', 'YUM 详解说明', '', 'inherit', 'open', 'open', '', '81-autosave-v1', '', '', '2015-03-02 14:55:17', '2015-03-02 06:55:17', '', 81, 'http://www.wonhsi.com/xiaoan/?p=83', 0, 'revision', '', 0),
(84, 1, '2015-03-03 15:28:48', '2015-03-03 07:28:48', '需求：用户上传的word文档需要在线显示。\r\n\r\n实现方式：用libreoffice 将word文档转换成pdf，pdf通过pdf2swf转换成swf文件后可以直接在页面上展示。\r\n\r\n本文介绍 Libreoffice 下word　转成　pdf 方法。\r\n\r\n&nbsp;\r\n\r\n下载Libreoffice rpm包。\r\n\r\nwget http://download.documentfoundation.org/libreoffice/stable/4.4.0/rpm/x86_64/LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n截至写文章时，是最新的包，具体的请登录http://download.documentfoundation.org/libreoffice/stable查看。\r\n\r\n解压缩，tar -xvf LibreOffice_4.4.0_Linux_x86-64_rpm.tar.gz\r\n\r\n安装 yum localinstall *.rpm -y\r\n\r\n&nbsp;\r\n\r\n安装完后，需要解决so文件加载不存在的问题，用yum search 搜索安装即可。\r\n\r\nyum install -y mesa-libGL\r\n\r\nyum install -y mesa-libGLU\r\n\r\n&nbsp;\r\n\r\nok, 调用 命令\r\n\r\nlibreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir "./" "2014.docx"\r\n\r\n即可实现word转pdf。\r\n\r\n&nbsp;\r\n\r\n经测试，转换后的pdf出现乱码现象，需要中文支持。\r\n\r\n安装中文支持包 yum -y groupinstall chinese-support\r\n\r\n修改语言配置 vim /etc/sysconfig/i18n\r\n\r\nLANG="zh_CN.UTF-8"  下次登录生效。\r\n\r\n或执行export LANG="zh_CN.UTF-8" 立即生效。\r\n\r\n&nbsp;\r\n\r\n在php、python等脚本语言 调用 libreoffice 转换命令即可实现word转pdf～～over\r\n\r\n&nbsp;\r\n\r\n补：pdf转swf实现\r\n\r\nswftools官方软件已经好几年没有更新了。我采用了最近的一个版本的进行下载编译安装。\r\n\r\nwget http://www.swftools.org/swftools-0.9.1.tar.gz\r\n\r\ntar zxvf swftools-0.9.1.tar.gz\r\n\r\ncd swftools-0.9.1.tar.gz\r\n\r\n./configure\r\n\r\nmake\r\n\r\nmake install\r\n\r\npdf2swf -o ./2014.swf -T -z -t -f ./2014.pdf -s languagedir=/usr/local/share/xpdf/chinese-simplified -s flashversion=9\r\n\r\n&nbsp;\r\n\r\nover ~ 以上通过php 调用命令即可实现php的word可视化操作', 'centos 下 word 转pdf 实现【 补 pdf 转swf 实现 】', '', 'inherit', 'open', 'open', '', '72-revision-v1', '', '', '2015-03-03 15:28:48', '2015-03-03 07:28:48', '', 72, 'http://www.wonhsi.com/xiaoan/?p=84', 0, 'revision', '', 0),
(86, 1, '2015-03-23 16:33:25', '2015-03-23 08:33:25', ' ', '', '', 'publish', 'open', 'open', '', '86', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 5, 'http://www.wonhsi.com/xiaoan/?p=86', 4, 'nav_menu_item', '', 0),
(87, 1, '2015-03-23 16:46:32', '2015-03-23 08:46:32', '&nbsp;\r\n<div style="padding-left: 30px;">\r\n<div>\r\n<div>vim /etc/yum.repo.d/mongodb-3.0.repo</div>\r\n<div style="text-align: left;"></div>\r\n<div></div>\r\n<code><strong>[mongodb-org-3.0]</strong></code></div>\r\n<div><code><strong>name=MongoDB </strong></code></div>\r\n<div><code><strong>Repositorybaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/</strong></code></div>\r\n<div><code><strong>gpgcheck=0</strong></code></div>\r\n<div><code><strong>enabled=1</strong></code></div>\r\n<div></div>\r\n<div>安装mongodb-3.0.1</div>\r\n</div>\r\n<div>\r\n<p style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">yum install -y mongodb-org-3.0.1 mongodb-org-server-3.0.1 mongodb-org-shell-3.0.1 mongodb-org-mongos-3.0.1 mongodb-org-tools-3.0.1</p>\r\n\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;"></pre>\r\n&nbsp;\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">运行mongodb</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">配置selinux参数</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">vim /etc/selinux/conf\r\nSELINUX=permissive</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">设置为开机自启</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">chkconfig mongod on</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">ok,安装完成</pre>\r\n</div>', 'Mongodb 安装说明', '', 'publish', 'open', 'open', '', 'mongodb-%e5%ae%89%e8%a3%85%e8%af%b4%e6%98%8e', '', '', '2015-04-02 17:36:29', '2015-04-02 09:36:29', '', 0, 'http://www.wonhsi.com/xiaoan/?p=87', 0, 'post', '', 0),
(88, 1, '2015-03-23 16:35:45', '2015-03-23 08:35:45', '寺', 'Mongodb 集群搭建 及分片存储 ', '', 'inherit', 'open', 'open', '', '87-revision-v1', '', '', '2015-03-23 16:35:45', '2015-03-23 08:35:45', '', 87, 'http://www.wonhsi.com/xiaoan/?p=88', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(92, 1, '2015-03-23 16:46:32', '2015-03-23 08:46:32', '&nbsp;\r\n<div style="padding-left: 30px;">\r\n<div>\r\n<div>vim /etc/yum.repo.d/mongodb-3.0.repo</div>\r\n<div>\r\n\r\n<hr />\r\n\r\n<pre style="font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">[mongodb-org-3.0]name=MongoDB Repositorybaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/gpgcheck=0enabled=1</pre>\r\n\r\n<hr />\r\n\r\n</div>\r\n<div>安装mongodb-3.0.1</div>\r\n</div>\r\n</div>\r\n<div>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">yum install -y mongodb-org-3.0.1 mongodb-org-server-3.0.1 mongodb-org-shell-3.0.1 mongodb-org-mongos-3.0.1 mongodb-org-tools-3.0.1</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;"></pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">运行mongodb</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">配置selinux参数</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">vim /etc/selinux/conf</pre>\r\n\r\n<hr style="padding-left: 30px;" />\r\n\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">SELINUX=permissive</pre>\r\n\r\n<hr style="padding-left: 30px;" />\r\n\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">设置为开机自启</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">chkconfig mongod on</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">ok,安装完成</pre>\r\n</div>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Mongodb 安装说明', '', 'inherit', 'open', 'open', '', '87-revision-v1', '', '', '2015-03-23 16:46:32', '2015-03-23 08:46:32', '', 87, 'http://www.wonhsi.com/xiaoan/?p=92', 0, 'revision', '', 0),
(93, 1, '2015-03-23 16:54:28', '2015-03-23 08:54:28', '&nbsp;\n<div style="padding-left: 30px;">\n<div>\n<div>vim /etc/yum.repo.d/mongodb-3.0.repo</div>\n<div style="text-align: left;"></div>\n<div></div>\n<code><strong>[mongodb-org-3.0]</strong></code></div>\n<div><code><strong>name=MongoDB </strong></code></div>\n<div><code><strong>Repositorybaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/</strong></code></div>\n<div><code><strong>gpgcheck=0</strong></code></div>\n<div><code><strong>enabled=1</strong></code></div>\n<div></div>\n<div>安装mongodb-3.0.1</div>\n</div>\n<div>\n<p style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">yum install -y mongodb-org-3.0.1 mongodb-org-server-3.0.1 mongodb-org-shell-3.0.1 mongodb-org-mongos-3.0.1 mongodb-org-tools-3.0.1</p>\n\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;"></pre>\n&nbsp;\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">运行mongodb</pre>\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">配置selinux参数</pre>\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">vim /etc/selinux/conf</pre>\nSELINUX=permissive\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">设置为开机自启</pre>\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">chkconfig mongod on</pre>\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">ok,安装完成</pre>\n</div>', 'Mongodb 安装说明', '', 'inherit', 'open', 'open', '', '87-autosave-v1', '', '', '2015-03-23 16:54:28', '2015-03-23 08:54:28', '', 87, 'http://www.wonhsi.com/xiaoan/?p=93', 0, 'revision', '', 0),
(94, 1, '2015-03-23 16:54:40', '2015-03-23 08:54:40', '&nbsp;\r\n<div style="padding-left: 30px;">\r\n<div>\r\n<div>vim /etc/yum.repo.d/mongodb-3.0.repo</div>\r\n<div style="text-align: left;"></div>\r\n<div></div>\r\n<code><strong>[mongodb-org-3.0]</strong></code></div>\r\n<div><code><strong>name=MongoDB </strong></code></div>\r\n<div><code><strong>Repositorybaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/</strong></code></div>\r\n<div><code><strong>gpgcheck=0</strong></code></div>\r\n<div><code><strong>enabled=1</strong></code></div>\r\n<div></div>\r\n<div>安装mongodb-3.0.1</div>\r\n</div>\r\n<div>\r\n<p style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">yum install -y mongodb-org-3.0.1 mongodb-org-server-3.0.1 mongodb-org-shell-3.0.1 mongodb-org-mongos-3.0.1 mongodb-org-tools-3.0.1</p>\r\n\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;"></pre>\r\n&nbsp;\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">运行mongodb</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">配置selinux参数</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">vim /etc/selinux/conf\r\nSELINUX=permissive</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">设置为开机自启</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">chkconfig mongod on</pre>\r\n<pre style="padding-left: 30px; font-family: Monaco, Consolas, Courier, ''Lucida Console'', monospace; font-style: normal; background-color: inherit;">ok,安装完成</pre>\r\n</div>', 'Mongodb 安装说明', '', 'inherit', 'open', 'open', '', '87-revision-v1', '', '', '2015-03-23 16:54:40', '2015-03-23 08:54:40', '', 87, 'http://www.wonhsi.com/xiaoan/?p=94', 0, 'revision', '', 0),
(95, 1, '2015-03-26 11:50:31', '2015-03-26 03:50:31', '添加配置服务器：\r\n\r\nmkdir /etc/mongodb/config/ -p    #配置目录\r\n\r\nmkdir /var/log/mongodb/              #日志目录\r\n\r\nmongod --configsvr --dbpath /etc/mongodb/config --logpath /var/log/mongodb/config.log --port 10000 --fork\r\n\r\n配置路由服务：\r\n\r\nmongos --configdb ip_addr:10000  --logpath /var/log/mongodb/  --port 27017\r\n\r\n&nbsp;\r\n\r\n启动分片服务\r\n\r\nmongod --dbpath  /etc/mongodb  --logpath /var/log/mongodb/shard.log --port 27019 --fork\r\n\r\n&lt;其他mongo机器上也操作此步，但端口可以设置为默认值 27017&gt;\r\n\r\n&nbsp;\r\n\r\n添加分片服务\r\n\r\nmongo\r\n\r\nuser admin\r\n\r\ndb.runCommand({addshard:"ip_addr:port" ,allowLocal:true});  // 分片在路由机器上的执行此命令。\r\n\r\ndb.runCommand({addshard:"ip_addr:port"}); //分片在其他Mongo机器上的执行此命令。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n片键 配置\r\n\r\ndb.runCommand({enablesharding:"DATABASE"});\r\n\r\ndb.runCommand({shardcollection:"DATABASE.TABLE",key:{_id:1}});\r\n\r\n&nbsp;\r\n\r\nok, 选择_id 或者其他键均可以~片键最基本的要求是保障数据均匀分布在各分片服务器上~', 'mongo 集群', '', 'publish', 'open', 'open', '', 'mongo-%e9%9b%86%e7%be%a4', '', '', '2015-04-02 17:24:53', '2015-04-02 09:24:53', '', 0, 'http://www.wonhsi.com/xiaoan/?p=95', 0, 'post', '', 0),
(96, 1, '2015-03-24 08:25:50', '2015-03-24 00:25:50', '配置php,apche环境比较熟悉，但还没有依据php.net提供的手册进行配置过，看过手册后发现，仅需两三步即可完成apache环境的配置。\n\n1、准备好apache windows x64版 ,官方仅提供源码。我一般从apache lounge上下载已编译好的<a title="apache 2.4.10 for windows x64" href="http://www.apachelounge.com/download/VC11/binaries/httpd-2.4.10-win64-VC11.zip" target="_blank">apache x64软件下载</a>。需要vc组件支持。<a title="Mircosoft vc++ x64/86.exe" href="http://www.microsoft.com/en-us/download/details.aspx?id=30679" target="_blank"> Mircosoft vc++ x64/86.exe</a>.\n\n2、下载php 5.6&nbsp; <a title="VC11 x64 Non Thread Safe" href="http://windows.php.net/downloads/releases/php-5.6.4-nts-Win32-VC11-x64.zip" target="_blank">VC11 x64 Non Thread Safe</a> （点击下载）。\n\n3、解压至某个目录下 如E:/server/php 和 E:/server/apache\n\n4、更改apache 配置文件。\n\n5、安装服务 在 E:/server/apache/bin/下执行 httpd -k install&nbsp; 和 httpd -k start ， 即可。\n\n&nbsp;\n\n&nbsp;', '基于windows 8.1 x64的php apache超简单配置', '', 'inherit', 'open', 'open', '', '56-revision-v1', '', '', '2015-03-24 08:25:50', '2015-03-24 00:25:50', '', 56, 'http://www.wonhsi.com/xiaoan/?p=96', 0, 'revision', '', 0),
(97, 1, '2015-03-24 08:26:41', '2015-03-24 00:26:41', '<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_100_100 line_content noteable_line old">var date = new Date();</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_101_100 line_content noteable_line old">var begin = date.getTime() - 28 * 86400000;</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_102_100 line_content noteable_line old">var end = date.getTime() - 86400000;</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_103_100 line_content noteable_line old">var beginTime = new Date(begin);</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_104_100 line_content noteable_line old">var endTime = new Date(end);</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old"></tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_105_100 line_content noteable_line old">$("#endTime").val(endTime.getFullYear() + ''-'' + (endTime.getMonth() + 1) + ''-'' + endTime.getDate());</td>\n</tr>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old"></tr>\n</tbody>\n</table>\n<table class="text-file" style="height: 106px;" width="720">\n<tbody>\n<tr id="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100" class="line_holder old">\n<td class="1ab6fe76f6a1f1fc24b61f8503009bd279824624_106_100 line_content noteable_line old">$("#beginTime").val(beginTime.getFullYear() + ''-'' + (beginTime.getMonth() + 1) + ''-'' + beginTime.getDate());&nbsp;\n\n以上方式可以计算各种想要的日期。</td>\n</tr>\n</tbody>\n</table>', 'JS 对日期的处理', '', 'inherit', 'open', 'open', '', '64-revision-v1', '', '', '2015-03-24 08:26:41', '2015-03-24 00:26:41', '', 64, 'http://www.wonhsi.com/xiaoan/?p=97', 0, 'revision', '', 0),
(98, 1, '2015-03-26 11:50:31', '2015-03-26 03:50:31', '添加配置服务器：\r\n\r\nmkdir /etc/mongodb/config/ -p    #配置目录\r\n\r\nmkdir /var/log/mongodb/              #日志目录\r\n\r\nmongod --configsvr --dbpath /etc/mongodb/config --logpath /var/log/mongodb/config.log --port 10000 --fork\r\n\r\n配置路由服务：\r\n\r\nmongos --configdb ip_addr:10000  --logpath /var/log/mongodb/  --port 27017\r\n\r\n&nbsp;\r\n\r\n启动分片服务\r\n\r\nmongod --dbpath  /etc/mongodb  --logpath /var/log/mongodb/shard.log --port 27019 --fork\r\n\r\n&lt;其他mongo机器上也操作此步，但端口可以设置为默认值 27017&gt;\r\n\r\n&nbsp;\r\n\r\n添加分片服务\r\n\r\nmongo\r\n\r\nuser admin\r\n\r\ndb.runCommand({addshard:"ip_addr:port" ,allowLocal:true});  // 分片在路由机器上的执行此命令。\r\n\r\ndb.runCommand({addshard:"ip_addr:port"}); //分片在其他Mongo机器上的执行此命令。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n片键 配置\r\n\r\ndb.runCommand({enablesharding:"DATABASE"});\r\n\r\ndb.runCommand({shardcollection:"DATABASE.TABLE",key:{_id:1}});\r\n\r\n&nbsp;\r\n\r\nok, 选择_id 或者其他键均可以~片键最基本的要求是保障数据均匀分布在各分片服务器上~', 'mongo 集群', '', 'inherit', 'open', 'open', '', '95-revision-v1', '', '', '2015-03-26 11:50:31', '2015-03-26 03:50:31', '', 95, 'http://www.wonhsi.com/xiaoan/?p=98', 0, 'revision', '', 0),
(99, 1, '2015-03-26 12:00:36', '2015-03-26 04:00:36', '一、CASE WHEN THEN ELSE END 使用用法。\r\n\r\n在用sql语句统计某字段的某种状态的出现的次数，可以考虑用到 CASE WHEN THEN ELSE END 使用用法。当数据量过于庞大，不建议使用。\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">SUM( <span style="color: #0000ff;">CASE</span> WHEN state=0 THEN 1 <span style="color: #0000ff;">ELSE</span> 0 <span style="color: #008080;">END</span> )<span style="color: #0000ff;">as</span> deade</span>\r\n\r\n&nbsp;\r\n\r\n二、 to_char\r\n\r\n将时间戳转为日期格式 ， 具体使用情景是可以通过 GROUP BY 聚合\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">to_char(to_timestamp(add_time), ''YYYY-MM-DD'')</span>\r\n\r\n&nbsp;\r\n\r\n三、LEFT JOIN , RIGHT JOIN\r\n\r\n涉及到表间操作，可以使用.\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">FROM a LEFT OUTER <span style="color: #008080;">JOIN</span> b ON a.id=b.mid</span>\r\n\r\n&nbsp;\r\n\r\n四、sql 统计除法问题\r\n\r\n偶尔要统计比率之类的问题，需要用到除法规则 ,NUMERIC 数值类型\r\n\r\n<span class="cnblogs_code"><span style="color: #008080;">ROUND</span>(live::NUMERIC/total::NUMERIC,4) <span style="color: #0000ff;">as</span> percentage</span>', 'mysql 的在统计中用到的几种方法', '', 'publish', 'open', 'open', '', 'mysql-%e7%9a%84%e5%9c%a8%e7%bb%9f%e8%ae%a1%e4%b8%ad%e7%94%a8%e5%88%b0%e7%9a%84%e5%87%a0%e7%a7%8d%e6%96%b9%e6%b3%95', '', '', '2015-04-02 17:24:22', '2015-04-02 09:24:22', '', 0, 'http://www.wonhsi.com/xiaoan/?p=99', 0, 'post', '', 0),
(100, 1, '2015-03-26 12:00:36', '2015-03-26 04:00:36', '一、CASE WHEN THEN ELSE END 使用用法。\r\n\r\n在用sql语句统计某字段的某种状态的出现的次数，可以考虑用到 CASE WHEN THEN ELSE END 使用用法。当数据量过于庞大，不建议使用。\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">SUM( <span style="color: #0000ff;">CASE</span> WHEN state=0 THEN 1 <span style="color: #0000ff;">ELSE</span> 0 <span style="color: #008080;">END</span> )<span style="color: #0000ff;">as</span> deade</span>\r\n\r\n&nbsp;\r\n\r\n二、 to_char\r\n\r\n将时间戳转为日期格式 ， 具体使用情景是可以通过 GROUP BY 聚合\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">to_char(to_timestamp(add_time), ''YYYY-MM-DD'')</span>\r\n\r\n&nbsp;\r\n\r\n三、LEFT JOIN , RIGHT JOIN\r\n\r\n涉及到表间操作，可以使用.\r\n\r\n范例：\r\n\r\n<span class="cnblogs_code">FROM a LEFT OUTER <span style="color: #008080;">JOIN</span> b ON a.id=b.mid</span>\r\n\r\n&nbsp;\r\n\r\n四、sql 统计除法问题\r\n\r\n偶尔要统计比率之类的问题，需要用到除法规则 ,NUMERIC 数值类型\r\n\r\n<span class="cnblogs_code"><span style="color: #008080;">ROUND</span>(live::NUMERIC/total::NUMERIC,4) <span style="color: #0000ff;">as</span> percentage</span>', 'mysql 的在统计中用到的几种方法', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-03-26 12:00:36', '2015-03-26 04:00:36', '', 99, 'http://www.wonhsi.com/xiaoan/?p=100', 0, 'revision', '', 0),
(101, 1, '2015-03-26 12:04:59', '2015-03-26 04:04:59', '需求：对上传文件进行统一编号，以 xxx-YYYYmmdd-000001为编码格式，其中YYYYmmdd为当天传的日期。\r\n\r\n技术方案：redis,get,set,incr,expireAt即可实现。\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> GetSearial() {\r\n     </span><span style="color: #800080;">$date</span> = <span style="color: #008080;">date</span>( "Ymd",<span style="color: #008080;">time</span><span style="color: #000000;">() );\r\n \r\n     </span><span style="color: #008000;">/*</span><span style="color: #008000;">连接redis服务器</span><span style="color: #008000;">*/</span>\r\n     <span style="color: #800080;">$redisObj</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Redis();\r\n     </span><span style="color: #800080;">$redisObj</span> -&gt; connect( "url","port"<span style="color: #000000;">);        \r\n     </span><span style="color: #800080;">$redisObj</span> -&gt; select(0<span style="color: #000000;">);\r\n      \r\n     </span><span style="color: #0000ff;">if</span> ( <span style="color: #0000ff;">empty</span> ( <span style="color: #800080;">$redis</span>-&gt;get(<span style="color: #800080;">$date</span><span style="color: #000000;">) )  {\r\n         </span><span style="color: #800080;">$redisObj</span> -&gt; set( <span style="color: #800080;">$date</span>, ''10000001'' );　　　　　<span style="color: #008000;">//</span><span style="color: #008000;">便于后面取000001</span>\r\n         <span style="color: #800080;">$redisObj</span> -&gt; expireAt( <span style="color: #800080;">$date</span>, <span style="color: #008080;">time</span>() + 86400 );     <span style="color: #008000;">//</span><span style="color: #008000;">设置24小时后过期</span>\r\n<span style="color: #000000;">     }\r\n     \r\n     </span><span style="color: #800080;">$searial</span> = "xxx-" . <span style="color: #800080;">$date</span> . "-" . <span style="color: #008080;">substr</span>( <span style="color: #800080;">$redisObj</span>-&gt;get(<span style="color: #800080;">$date</span>),-6<span style="color: #000000;"> );　　\r\n     </span><span style="color: #800080;">$redisObj</span>-&gt;<span style="color: #000000;">incr();\r\n     </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$searial</span><span style="color: #000000;">;\r\n}</span></pre>\r\n</div>', 'redis 计数实现', '', 'publish', 'open', 'open', '', 'redis-%e8%ae%a1%e6%95%b0%e5%ae%9e%e7%8e%b0', '', '', '2015-04-02 17:24:40', '2015-04-02 09:24:40', '', 0, 'http://www.wonhsi.com/xiaoan/?p=101', 0, 'post', '', 0),
(102, 1, '2015-03-26 12:04:59', '2015-03-26 04:04:59', '需求：对上传文件进行统一编号，以 xxx-YYYYmmdd-000001为编码格式，其中YYYYmmdd为当天传的日期。\r\n\r\n技术方案：redis,get,set,incr,expireAt即可实现。\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> GetSearial() {\r\n     </span><span style="color: #800080;">$date</span> = <span style="color: #008080;">date</span>( "Ymd",<span style="color: #008080;">time</span><span style="color: #000000;">() );\r\n \r\n     </span><span style="color: #008000;">/*</span><span style="color: #008000;">连接redis服务器</span><span style="color: #008000;">*/</span>\r\n     <span style="color: #800080;">$redisObj</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Redis();\r\n     </span><span style="color: #800080;">$redisObj</span> -&gt; connect( "url","port"<span style="color: #000000;">);        \r\n     </span><span style="color: #800080;">$redisObj</span> -&gt; select(0<span style="color: #000000;">);\r\n      \r\n     </span><span style="color: #0000ff;">if</span> ( <span style="color: #0000ff;">empty</span> ( <span style="color: #800080;">$redis</span>-&gt;get(<span style="color: #800080;">$date</span><span style="color: #000000;">) )  {\r\n         </span><span style="color: #800080;">$redisObj</span> -&gt; set( <span style="color: #800080;">$date</span>, ''10000001'' );　　　　　<span style="color: #008000;">//</span><span style="color: #008000;">便于后面取000001</span>\r\n         <span style="color: #800080;">$redisObj</span> -&gt; expireAt( <span style="color: #800080;">$date</span>, <span style="color: #008080;">time</span>() + 86400 );     <span style="color: #008000;">//</span><span style="color: #008000;">设置24小时后过期</span>\r\n<span style="color: #000000;">     }\r\n     \r\n     </span><span style="color: #800080;">$searial</span> = "xxx-" . <span style="color: #800080;">$date</span> . "-" . <span style="color: #008080;">substr</span>( <span style="color: #800080;">$redisObj</span>-&gt;get(<span style="color: #800080;">$date</span>),-6<span style="color: #000000;"> );　　\r\n     </span><span style="color: #800080;">$redisObj</span>-&gt;<span style="color: #000000;">incr();\r\n     </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$searial</span><span style="color: #000000;">;\r\n}</span></pre>\r\n</div>', 'redis 计数实现', '', 'inherit', 'open', 'open', '', '101-revision-v1', '', '', '2015-03-26 12:04:59', '2015-03-26 04:04:59', '', 101, 'http://www.wonhsi.com/xiaoan/?p=102', 0, 'revision', '', 0),
(104, 1, '2015-04-02 16:37:27', '2015-04-02 08:37:27', '程序猿的世界永无止境！\n\n程序猿的世界独一无二！\n\n程序猿的世界你不懂！\n\n我将在这\n\n开垦荒地\n\n创建猿类聚集地\n\n知识，', '欢迎来到我的blog', '', 'inherit', 'open', 'open', '', '26-autosave-v1', '', '', '2015-04-02 16:37:27', '2015-04-02 08:37:27', '', 26, 'http://www.wonhsi.com/xiaoan/?p=104', 0, 'revision', '', 0),
(105, 1, '2015-04-02 16:32:57', '2015-04-02 08:32:57', '我的基地正式在这落脚，欢迎大家收藏和访问。\r\n\r\n与大家分享知识，共同吐槽。', '欢迎来到我的blog', '', 'inherit', 'open', 'open', '', '26-revision-v1', '', '', '2015-04-02 16:32:57', '2015-04-02 08:32:57', '', 26, 'http://www.wonhsi.com/xiaoan/?p=105', 0, 'revision', '', 0),
(106, 1, '2015-04-02 16:38:58', '2015-04-02 08:38:58', '程序猿的世界永无止境！\r\n\r\n程序猿的世界独一无二！\r\n\r\n程序猿的世界你不懂！\r\n\r\n我将在这\r\n\r\n开垦荒地\r\n\r\n创建猿类聚集地\r\n\r\n知识，程序猿的源头\r\n\r\n走进那，浩瀚的宇宙\r\n\r\n与你携手，共创猿类世界', '欢迎来到我的blog', '', 'inherit', 'open', 'open', '', '26-revision-v1', '', '', '2015-04-02 16:38:58', '2015-04-02 08:38:58', '', 26, 'http://www.wonhsi.com/xiaoan/?p=106', 0, 'revision', '', 0),
(107, 1, '2015-04-02 16:39:56', '2015-04-02 08:39:56', '&nbsp;\r\n\r\n程序猿的世界永无止境！\r\n\r\n程序猿的世界独一无二！\r\n\r\n程序猿的世界你不懂！\r\n\r\n我将在这\r\n\r\n开垦荒地\r\n\r\n创建猿类聚集地\r\n\r\n知识，程序猿的源头\r\n\r\n走进那，浩瀚的宇宙\r\n\r\n与你携手，共创猿类世界', '欢迎来到我的blog', '', 'inherit', 'open', 'open', '', '26-revision-v1', '', '', '2015-04-02 16:39:56', '2015-04-02 08:39:56', '', 26, 'http://www.wonhsi.com/xiaoan/?p=107', 0, 'revision', '', 0),
(108, 1, '2015-04-02 18:06:09', '2015-04-02 10:06:09', '为什么会用到手法二字？\r\n\r\n因为我的语文是体育老师教的...\r\n<h3>split 字符串截取函数</h3>\r\n<p style="padding-left: 30px;">在有些字段的定义中，会出现以固定字符串分割，如分号，点号，具体如  湖北.武汉.洪山区</p>\r\n<p style="padding-left: 30px;">匹配搜索中，应该用like，但匹配多个地区时，需要用到in操作，如多个省。</p>\r\n<p style="padding-left: 30px;">可以用split截取，split( location, ''.'' , 1 ) as province 再做IN 匹配搜索。</p>\r\n&nbsp;\r\n<h3>to_char to_timestamp  时间戳转日期</h3>\r\n<p style="padding-left: 30px;">to_char(to_timestamp(add_time), ''YYYYMMDD'')</p>\r\n&nbsp;\r\n<h3>导出操作</h3>\r\n<p style="padding-left: 30px;">涉及到查询数据导出，若用了navicat等客户端工具，可以直接导出，若在linux命令下，需要折腾折腾</p>\r\n<p style="padding-left: 30px;">psql -h 127.0.0.1 -Usqluser -d cert_market -t -A -c  "sql" -F ''","'' -o /tmp/test.csv</p>\r\n<p style="padding-left: 30px;">其中sql为具体的语句</p>\r\n&nbsp;\r\n\r\n&nbsp;', 'postgre 数据操作中用到的几处手法', '', 'publish', 'open', 'open', '', 'postgre-%e6%95%b0%e6%8d%ae%e6%93%8d%e4%bd%9c%e4%b8%ad%e7%94%a8%e5%88%b0%e7%9a%84%e5%87%a0%e5%a4%84%e6%89%8b%e6%b3%95', '', '', '2015-04-02 18:06:09', '2015-04-02 10:06:09', '', 0, 'http://www.wonhsi.com/xiaoan/?p=108', 0, 'post', '', 0),
(109, 1, '2015-04-02 18:06:09', '2015-04-02 10:06:09', '为什么会用到手法二字？\r\n\r\n因为我的语文是体育老师教的...\r\n<h3>split 字符串截取函数</h3>\r\n<p style="padding-left: 30px;">在有些字段的定义中，会出现以固定字符串分割，如分号，点号，具体如  湖北.武汉.洪山区</p>\r\n<p style="padding-left: 30px;">匹配搜索中，应该用like，但匹配多个地区时，需要用到in操作，如多个省。</p>\r\n<p style="padding-left: 30px;">可以用split截取，split( location, ''.'' , 1 ) as province 再做IN 匹配搜索。</p>\r\n&nbsp;\r\n<h3>to_char to_timestamp  时间戳转日期</h3>\r\n<p style="padding-left: 30px;">to_char(to_timestamp(add_time), ''YYYYMMDD'')</p>\r\n&nbsp;\r\n<h3>导出操作</h3>\r\n<p style="padding-left: 30px;">涉及到查询数据导出，若用了navicat等客户端工具，可以直接导出，若在linux命令下，需要折腾折腾</p>\r\n<p style="padding-left: 30px;">psql -h 127.0.0.1 -Usqluser -d cert_market -t -A -c  "sql" -F ''","'' -o /tmp/test.csv</p>\r\n<p style="padding-left: 30px;">其中sql为具体的语句</p>\r\n&nbsp;\r\n\r\n&nbsp;', 'postgre 数据操作中用到的几处手法', '', 'inherit', 'open', 'open', '', '108-revision-v1', '', '', '2015-04-02 18:06:09', '2015-04-02 10:06:09', '', 108, 'http://www.wonhsi.com/xiaoan/?p=109', 0, 'revision', '', 0),
(110, 1, '2015-04-02 18:47:59', '2015-04-02 10:47:59', '构架研究分析', '', '', 'publish', 'open', 'open', '', '110', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/?p=110', 10, 'nav_menu_item', '', 0),
(111, 1, '2015-04-02 18:47:59', '2015-04-02 10:47:59', '对php一些著名框架的应用', '', '', 'publish', 'open', 'open', '', '111', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/?p=111', 11, 'nav_menu_item', '', 0),
(112, 1, '2015-04-02 18:47:59', '2015-04-02 10:47:59', 'php著名开源项目的运用', '', '', 'publish', 'open', 'open', '', '112', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/?p=112', 12, 'nav_menu_item', '', 0),
(113, 1, '2015-04-02 18:47:59', '2015-04-02 10:47:59', '托管在git上的一些个人项目', '', '', 'publish', 'open', 'open', '', '113', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/?p=113', 14, 'nav_menu_item', '', 0),
(114, 1, '2015-04-02 18:47:59', '2015-04-02 10:47:59', ' ', '', '', 'publish', 'open', 'open', '', '114', '', '', '2015-04-02 18:48:16', '2015-04-02 10:48:16', '', 0, 'http://www.wonhsi.com/xiaoan/?p=114', 13, 'nav_menu_item', '', 0),
(115, 1, '2015-04-07 16:39:59', '2015-04-07 08:39:59', '网上一堆毫无章程的安装方法，我这里实时测试，给出一个最简单的安装教程。\r\n<h2>安装 rabbitmq ,先安装 epel源~</h2>\r\n<p style="padding-left: 30px;"> http://mirrors.zju.edu.cn/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</p>\r\n<p style="padding-left: 30px;">执行yum update -y &amp;&amp; yum install -y rabbitmq-server</p>\r\n<p style="padding-left: 30px;">ok ~</p>\r\n\r\n<h2> 配置</h2>\r\n<pre style="padding-left: 30px;">cd /usr/lib/rabbitmq/lib/rabbitmq_server-3.1.5/sbin \r\nrabbitmq-plugins enable rabbitmq_management\r\n\r\n\r\n</pre>\r\n<p style="padding-left: 30px;"></p>', 'Linux 下 rabittmq 安装说明', '', 'publish', 'open', 'open', '', 'linux-%e4%b8%8b-rabittmq-%e5%ae%89%e8%a3%85%e8%af%b4%e6%98%8e', '', '', '2015-04-07 18:20:58', '2015-04-07 10:20:58', '', 0, 'http://www.wonhsi.com/xiaoan/?p=115', 0, 'post', '', 0),
(116, 1, '2015-04-07 15:53:56', '2015-04-07 07:53:56', '<h2>安装erlang</h2>\r\n<p style="padding-left: 30px;">http://www.erlang.org/download_release/ 找到R16B03 下载源码。</p>\r\n<p style="padding-left: 30px;">放置在/usr/src/目录下，解压 tar -xzvf xx.tar.gz</p>\r\n<p style="padding-left: 30px;">需要安装 gcc、 cc 和 ncurses-devel （ CentOS yum install gcc cc ncurses-devel ）</p>\r\n<p style="padding-left: 30px;">./configure --prefix=/opt/erlang</p>\r\n<p style="padding-left: 30px;">进入/opt/erlang/bin 查看是否有erl 文件，若有说明安装成功</p>\r\n<p style="padding-left: 30px;">修改/etc/profile 最后添加下面两行</p>\r\n\r\n<pre style="padding-left: 30px;"># set erlang environment\r\nEXPORT PATH=$PATH:/opt/erlang/bin</pre>\r\n<p style="padding-left: 30px;">执行 source /etc/profile</p>\r\n<p style="padding-left: 30px;">安装 simplejson</p>\r\n<p style="padding-left: 30px;">yum install python-simplejson</p>\r\n<p style="padding-left: 30px;">安装 rabbitmq ,先安装 epel源~</p>\r\n<p style="padding-left: 30px;"> http://mirrors.zju.edu.cn/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</p>\r\n<p style="padding-left: 30px;"></p>\r\n&nbsp;', 'Linux 下 rabittmq 安装说明', '', 'inherit', 'open', 'open', '', '115-revision-v1', '', '', '2015-04-07 15:53:56', '2015-04-07 07:53:56', '', 115, 'http://www.wonhsi.com/xiaoan/?p=116', 0, 'revision', '', 0),
(117, 1, '2015-04-07 16:01:08', '2015-04-07 08:01:08', '<strong>RPM是RedHat Package Manager（RedHat软件包管理工具）类似Windows里面的“添加/删除程序”</strong>\r\n\r\nrpm 执行安装包\r\n二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\r\n\r\n常用命令组合：\r\n\r\n－ivh：安装显示安装进度--install--verbose--hash\r\n－Uvh：升级软件包--Update；\r\n－qpl：列出RPM软件包内的文件信息[Query Package list]；\r\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\r\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\r\n－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；\r\n－e：删除包\r\n\r\n&nbsp;\r\n\r\nrpm -q samba //查询程序是否安装\r\n\r\nrpm -ivh  /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度\r\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录\r\n\r\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；\r\nrpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本\r\n\r\nrpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*\r\nrpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录\r\n\r\nrpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息\r\nrpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file\r\nrpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\r\nrpm2cpio file.rpm |cpio -div    ＃[抽出文件]\r\n\r\nrpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash\r\nrpm -ivh\r\n\r\nrpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade\r\nrpm -e file.rpm      ＃[删除一个rpm包]--erase\r\n\r\n&nbsp;\r\n\r\n常用参数：\r\n\r\nInstall/Upgrade/Erase options:\r\n\r\n-i, --install                     install package(s)\r\n-v, --verbose                     provide more detailed output\r\n-h, --hash                        print hash marks as package installs (good with -v)\r\n-e, --erase                       erase (uninstall) package\r\n-U, --upgrade=&lt;packagefile&gt;+      upgrade package(s)\r\n－-replacepkge                    无论软件包是否已被安装，都强行安装软件包\r\n--test                            安装测试，并不实际安装\r\n--nodeps                          忽略软件包的依赖关系强行安装\r\n--force                           忽略软件包及文件的冲突\r\n\r\nQuery options (with -q or --query):\r\n-a, --all                         query/verify all packages\r\n-p, --package                     query/verify a package file\r\n-l, --list                        list files in package\r\n-d, --docfiles                    list all documentation files\r\n-f, --file                        query/verify package(s) owning file\r\n\r\n<strong>RPM源代码包装安装</strong>\r\n\r\n.src.rpm结尾的文件，这些文件是由软件的源代码包装而成的，用户要安装这类RPM软件包，必须使用命令：\r\n\r\nrpm　--recompile　vim-4.6-4.src.rpm   ＃这个命令会把源代码解包并编译、安装它，如果用户使用命令：\r\n\r\nrpm　--rebuild　vim-4.6-4.src.rpm　　＃在安装完成后，还会把编译生成的可执行文件重新包装成i386.rpm的RPM软件包。', 'Linux RPM 使用与说明【整理】', '', 'publish', 'open', 'open', '', 'linux-rpm-%e4%bd%bf%e7%94%a8%e4%b8%8e%e8%af%b4%e6%98%8e%e3%80%90%e6%95%b4%e7%90%86%e3%80%91', '', '', '2015-04-07 16:01:08', '2015-04-07 08:01:08', '', 0, 'http://www.wonhsi.com/xiaoan/?p=117', 0, 'post', '', 0),
(118, 1, '2015-04-07 16:01:08', '2015-04-07 08:01:08', '<strong>RPM是RedHat Package Manager（RedHat软件包管理工具）类似Windows里面的“添加/删除程序”</strong>\r\n\r\nrpm 执行安装包\r\n二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\r\n\r\n常用命令组合：\r\n\r\n－ivh：安装显示安装进度--install--verbose--hash\r\n－Uvh：升级软件包--Update；\r\n－qpl：列出RPM软件包内的文件信息[Query Package list]；\r\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\r\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\r\n－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；\r\n－e：删除包\r\n\r\n&nbsp;\r\n\r\nrpm -q samba //查询程序是否安装\r\n\r\nrpm -ivh  /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度\r\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录\r\n\r\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；\r\nrpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本\r\n\r\nrpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*\r\nrpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录\r\n\r\nrpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息\r\nrpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file\r\nrpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\r\nrpm2cpio file.rpm |cpio -div    ＃[抽出文件]\r\n\r\nrpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash\r\nrpm -ivh\r\n\r\nrpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade\r\nrpm -e file.rpm      ＃[删除一个rpm包]--erase\r\n\r\n&nbsp;\r\n\r\n常用参数：\r\n\r\nInstall/Upgrade/Erase options:\r\n\r\n-i, --install                     install package(s)\r\n-v, --verbose                     provide more detailed output\r\n-h, --hash                        print hash marks as package installs (good with -v)\r\n-e, --erase                       erase (uninstall) package\r\n-U, --upgrade=&lt;packagefile&gt;+      upgrade package(s)\r\n－-replacepkge                    无论软件包是否已被安装，都强行安装软件包\r\n--test                            安装测试，并不实际安装\r\n--nodeps                          忽略软件包的依赖关系强行安装\r\n--force                           忽略软件包及文件的冲突\r\n\r\nQuery options (with -q or --query):\r\n-a, --all                         query/verify all packages\r\n-p, --package                     query/verify a package file\r\n-l, --list                        list files in package\r\n-d, --docfiles                    list all documentation files\r\n-f, --file                        query/verify package(s) owning file\r\n\r\n<strong>RPM源代码包装安装</strong>\r\n\r\n.src.rpm结尾的文件，这些文件是由软件的源代码包装而成的，用户要安装这类RPM软件包，必须使用命令：\r\n\r\nrpm　--recompile　vim-4.6-4.src.rpm   ＃这个命令会把源代码解包并编译、安装它，如果用户使用命令：\r\n\r\nrpm　--rebuild　vim-4.6-4.src.rpm　　＃在安装完成后，还会把编译生成的可执行文件重新包装成i386.rpm的RPM软件包。', 'Linux RPM 使用与说明【整理】', '', 'inherit', 'open', 'open', '', '117-revision-v1', '', '', '2015-04-07 16:01:08', '2015-04-07 08:01:08', '', 117, 'http://www.wonhsi.com/xiaoan/?p=118', 0, 'revision', '', 0),
(119, 1, '2015-04-07 16:39:59', '2015-04-07 08:39:59', '网上一堆毫无章程的安装方法，我这里实时测试，给出一个最简单的安装教程。\r\n\r\n安装 rabbitmq ,先安装 epel源~\r\n<p style="padding-left: 30px;"> http://mirrors.zju.edu.cn/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</p>\r\n<p style="padding-left: 30px;">执行yum update -y &amp;&amp; yum install -y rabbitmq-server</p>\r\n<p style="padding-left: 30px;">ok ~</p>\r\n\r\n<h2></h2>\r\n<p style="padding-left: 30px;"></p>\r\n<p style="padding-left: 30px;"></p>', 'Linux 下 rabittmq 安装说明', '', 'inherit', 'open', 'open', '', '115-revision-v1', '', '', '2015-04-07 16:39:59', '2015-04-07 08:39:59', '', 115, 'http://www.wonhsi.com/xiaoan/?p=119', 0, 'revision', '', 0),
(120, 1, '2015-04-07 18:17:37', '2015-04-07 10:17:37', '网上一堆毫无章程的安装方法，我这里实时测试，给出一个最简单的安装教程。\n<h2>安装 rabbitmq ,先安装 epel源~</h2>\n<p style="padding-left: 30px;"> http://mirrors.zju.edu.cn/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</p>\n<p style="padding-left: 30px;">执行yum update -y &amp;&amp; yum install -y rabbitmq-server</p>\n<p style="padding-left: 30px;">ok ~</p>\n\n<h2> 配置</h2>\n<pre style="padding-left: 30px;">cd /usr/lib/rabbitmq/lib/rabbitmq_server-3.1.5/sbin \nrabbitmq-plugins enable rabbitmq_management\n\n\n</pre>\n<p style="padding-left: 30px;"></p>', 'Linux 下 rabittmq 安装说明', '', 'inherit', 'open', 'open', '', '115-autosave-v1', '', '', '2015-04-07 18:17:37', '2015-04-07 10:17:37', '', 115, 'http://www.wonhsi.com/xiaoan/?p=120', 0, 'revision', '', 0),
(121, 1, '2015-04-07 18:20:58', '2015-04-07 10:20:58', '网上一堆毫无章程的安装方法，我这里实时测试，给出一个最简单的安装教程。\r\n<h2>安装 rabbitmq ,先安装 epel源~</h2>\r\n<p style="padding-left: 30px;"> http://mirrors.zju.edu.cn/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</p>\r\n<p style="padding-left: 30px;">执行yum update -y &amp;&amp; yum install -y rabbitmq-server</p>\r\n<p style="padding-left: 30px;">ok ~</p>\r\n\r\n<h2> 配置</h2>\r\n<pre style="padding-left: 30px;">cd /usr/lib/rabbitmq/lib/rabbitmq_server-3.1.5/sbin \r\nrabbitmq-plugins enable rabbitmq_management\r\n\r\n\r\n</pre>\r\n<p style="padding-left: 30px;"></p>', 'Linux 下 rabittmq 安装说明', '', 'inherit', 'open', 'open', '', '115-revision-v1', '', '', '2015-04-07 18:20:58', '2015-04-07 10:20:58', '', 115, 'http://www.wonhsi.com/xiaoan/?p=121', 0, 'revision', '', 0),
(122, 1, '2015-04-10 10:27:07', '0000-00-00 00:00:00', '', '自动草稿', '', 'auto-draft', 'open', 'open', '', '', '', '', '2015-04-10 10:27:07', '0000-00-00 00:00:00', '', 0, 'http://www.wonhsi.com/xiaoan/?p=122', 0, 'post', '', 0),
(123, 1, '2015-04-10 14:46:47', '0000-00-00 00:00:00', '也许有多家企业提供word在线处理系统~但他们收费，也许你的需求仅仅是将用户提交的word文件实现线上预览，也许你会让用户改用pdf，因为pdf在浏览器中预览已成熟了。现在基于thinkphp开发了一个在线word上传预览程序，供大家使用。\r\n\r\nhttps://github.com/wonhsi/mythinkphp\r\n\r\nword.class.php 文件在 mythinkphp/ThinkPHP/Library/Think/目录下，具体使用说明如下：\r\n\r\n在CentOS上安装相关libreoffice,pdf2swf组件，具体安装方法参考<a href="http://www.wonhsi.com/xiaoan/?p=72">centos 下 word 转pdf 实现【 补 pdf 转swf 实现 】</a>\r\n\r\n配置项\r\n\r\n$config = array(\r\n\r\n''wordRoot'' =&gt; ''./Uploads/'',\r\n\r\n''pdfPath'' =&gt; ''./PDFFile/'',\r\n\r\n''swfPath'' =&gt; ''./SWFFile/'',\r\n\r\n''libreoffice'' =&gt; ''/usr/bin/libreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir '',\r\n<table class="highlight tab-size-8 js-file-line-container" style="height: 61px;" width="639">\r\n<tbody>\r\n<tr>\r\n<td id="LC24" class="blob-code js-file-line"> ''wordRoot'' =&gt; ''./Uploads/'',''pdfPath'' =&gt; ''./PDFFile/'',''swfPath'' =&gt; ''./SWFFile/'',''libreoffice'' =&gt; ''/usr/bin/libreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir '',<span class="pl-s1"><span class="pl-s"><span class="pl-pds">''</span>pdf2swf<span class="pl-pds">''</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">''</span>/usr/local/bin/pdf2swf -T -z -t -s languagedir=/usr/local/share/xpdf/chinese-simplified -s flashversion=9 <span class="pl-pds">''</span></span> , <span class="pl-c">// -o -f 附加指</span></span>''logPath'' =&gt; '''',</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n$word_process = new \\Think\\Word();    //实例化类\r\n\r\n$word_process-&gt;runSwf( $wordfile )      //对word文档进行转换。\r\n\r\n&nbsp;\r\n\r\n&nbsp;', '基于web的word在线显示解决方案', '', 'draft', 'open', 'open', '', '', '', '', '2015-04-10 14:46:47', '2015-04-10 06:46:47', '', 0, 'http://www.wonhsi.com/xiaoan/?p=123', 0, 'post', '', 0),
(124, 1, '2015-04-10 11:13:17', '2015-04-10 03:13:17', '也许有多家企业提供word在线处理系统~但他们收费，也许你的需求仅仅是将用户提交的word文件实现线上预览，也许你会让用户改用pdf，因为pdf在浏览器中预览已成熟了。现在基于thinkphp开发了一个在线word上传预览程序，供大家使用。\r\n\r\nhttps://github.com/wonhsi/mythinkphp\r\n\r\nword.class.php 文件在 mythinkphp/ThinkPHP/Library/Think/目录下，具体使用说明如下：\r\n\r\n在CentOS上安装相关libreoffice,pdf2swf组件，具体安装方法参考<a href="http://www.wonhsi.com/xiaoan/?p=72">centos 下 word 转pdf 实现【 补 pdf 转swf 实现 】</a>\r\n\r\n配置项\r\n\r\n$config = array(\r\n\r\n''wordRoot'' =&gt; ''./Uploads/'',\r\n\r\n''pdfPath'' =&gt; ''./PDFFile/'',\r\n\r\n''swfPath'' =&gt; ''./SWFFile/'',\r\n\r\n''libreoffice'' =&gt; ''/usr/bin/libreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir '',\r\n<table class="highlight tab-size-8 js-file-line-container" style="height: 61px;" width="639">\r\n<tbody>\r\n<tr>\r\n<td id="LC24" class="blob-code js-file-line"> ''wordRoot'' =&gt; ''./Uploads/'',''pdfPath'' =&gt; ''./PDFFile/'',''swfPath'' =&gt; ''./SWFFile/'',''libreoffice'' =&gt; ''/usr/bin/libreoffice4.4 --invisible --convert-to pdf:writer_pdf_Export --outdir '',<span class="pl-s1"><span class="pl-s"><span class="pl-pds">''</span>pdf2swf<span class="pl-pds">''</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">''</span>/usr/local/bin/pdf2swf -T -z -t -s languagedir=/usr/local/share/xpdf/chinese-simplified -s flashversion=9 <span class="pl-pds">''</span></span> , <span class="pl-c">// -o -f 附加指</span></span>''logPath'' =&gt; '''',</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n$word_process = new \\Think\\Word();    //实例化类\r\n\r\n$word_process-&gt;runSwf( $wordfile )      //对word文档进行转换。\r\n\r\n&nbsp;\r\n\r\n&nbsp;', '基于web的word在线显示解决方案', '', 'inherit', 'open', 'open', '', '123-revision-v1', '', '', '2015-04-10 11:13:17', '2015-04-10 03:13:17', '', 123, 'http://www.wonhsi.com/xiaoan/?p=124', 0, 'revision', '', 0),
(125, 1, '2015-04-10 16:15:56', '0000-00-00 00:00:00', '', 'mongo 操作封装', '', 'draft', 'open', 'open', '', '', '', '', '2015-04-10 16:15:56', '2015-04-10 08:15:56', '', 0, 'http://www.wonhsi.com/xiaoan/?p=125', 0, 'post', '', 0),
(126, 1, '2015-04-10 16:15:56', '2015-04-10 08:15:56', '', 'mongo 操作封装', '', 'inherit', 'open', 'open', '', '125-revision-v1', '', '', '2015-04-10 16:15:56', '2015-04-10 08:15:56', '', 125, 'http://www.wonhsi.com/xiaoan/?p=126', 0, 'revision', '', 0);
